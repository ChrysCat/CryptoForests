{
  "contractName": "GreenContract",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "applicationName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "workflowName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "originatingAddress",
          "type": "address"
        }
      ],
      "name": "ContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "applicationName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "workflowName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "action",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "originatingAddress",
          "type": "address"
        }
      ],
      "name": "ContractUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "State",
      "outputs": [
        {
          "internalType": "enum GreenContract.StateType",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "buyer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "data",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "installments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "listPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newData",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "validator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "inputdata",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "inputInstallments",
          "type": "uint256"
        }
      ],
      "name": "setTree",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getInstallments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "inputvalidator",
          "type": "address"
        }
      ],
      "name": "makeOffer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "rejectOffer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptOffer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "accept",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "reject",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "proofdata",
          "type": "string"
        }
      ],
      "name": "submitProofOfWork",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "markValidated",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptProof",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "markInvalidated",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"applicationName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"workflowName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"originatingAddress\",\"type\":\"address\"}],\"name\":\"ContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"applicationName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"workflowName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"originatingAddress\",\"type\":\"address\"}],\"name\":\"ContractUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"State\",\"outputs\":[{\"internalType\":\"enum GreenContract.StateType\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"accept\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOffer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptProof\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"buyer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"data\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInstallments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"installments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"listPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"inputvalidator\",\"type\":\"address\"}],\"name\":\"makeOffer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"markInvalidated\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"markValidated\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newData\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reject\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"rejectOffer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"inputdata\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputInstallments\",\"type\":\"uint256\"}],\"name\":\"setTree\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"proofdata\",\"type\":\"string\"}],\"name\":\"submitProofOfWork\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"validator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/leledumbodev/devpost/CryptoForests/contracts/GreenContract.sol\":\"GreenContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/leledumbodev/devpost/CryptoForests/contracts/GreenContract.sol\":{\"keccak256\":\"0x7584541da57aedfa0ad3eb9e45d2f2977e7c19f34a1b96b767387b6156c1bcdc\",\"urls\":[\"bzz-raw://be5df76658761ec15b84ec172d19cbf0a9447eae100bf6b66870dc739ef7cccc\",\"dweb:/ipfs/QmUNHEaCjFmqi6naWBK3JdLD3XgmQoZbGWuk95JoKkFgHv\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600d81526020017f43727970746f466f7265737473000000000000000000000000000000000000008152506000908051906020019062000051929190620000f5565b506040518060400160405280600d81526020017f477265656e436f6e747261637400000000000000000000000000000000000000815250600190805190602001906200009f929190620000f5565b50348015620000ad57600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001a4565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200013857805160ff191683800117855562000169565b8280016001018555821562000169579182015b82811115620001685782518255916020019190600101906200014b565b5b5090506200017891906200017c565b5090565b620001a191905b808211156200019d57600081600090555060010162000183565b5090565b90565b612be280620001b46000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638da5cb5b116100b8578063e0c9b3011161007c578063e0c9b301146105b0578063e5b12812146105ba578063eb62df61146105d8578063efd998ad146105e2578063f1b6dccd146105ec578063f5833a2f1461061857610137565b80638da5cb5b1461033b5780638efc905a1461038557806398d5fdca14610440578063baf2a3211461045e578063dfba03bc1461052d57610137565b80636eb588d9116100ff5780636eb588d9146101c25780637150d8ae146101e057806373d4a13a1461022a578063893d20e8146102ad5780638b1264b1146102f757610137565b80632852b71c1461013c5780632ad29c81146101465780632f34a3d7146101505780633a5381b51461016e5780634dc415de146101b8575b600080fd5b610144610622565b005b61014e610903565b005b610158610c35565b6040518082815260200191505060405180910390f35b610176610c3b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c0610c61565b005b6101ca610f41565b6040518082815260200191505060405180910390f35b6101e8610f47565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610232610f6d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610272578082015181840152602081019050610257565b50505050905090810190601f16801561029f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b561100b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103396004803603602081101561030d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611035565b005b61034361143b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61043e6004803603602081101561039b57600080fd5b81019080803590602001906401000000008111156103b857600080fd5b8201836020820111156103ca57600080fd5b803590602001918460018302840111640100000000831117156103ec57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611461565b005b6104486117a9565b6040518082815260200191505060405180910390f35b61052b6004803603606081101561047457600080fd5b810190808035906020019064010000000081111561049157600080fd5b8201836020820111156104a357600080fd5b803590602001918460018302840111640100000000831117156104c557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803590602001909291905050506117b3565b005b610535611a9e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561057557808201518184015260208101905061055a565b50505050905090810190601f1680156105a25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105b8611b3c565b005b6105c2611e54565b6040518082815260200191505060405180910390f35b6105e0611e5e565b005b6105ea61215a565b005b6105f461240b565b6040518082600981111561060457fe5b60ff16815260200191505060405180910390f35b61062061241e565b005b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156106a657506004600981111561068857fe5b600760009054906101000a900460ff1660098111156106a357fe5b14155b156106fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604a81526020018061288b604a913960600191505060405180910390fd5b6004600981111561070957fe5b600760009054906101000a900460ff16600981111561072457fe5b141561074f576006600760006101000a81548160ff0219169083600981111561074957fe5b02179055505b7fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481038452878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156108385780601f1061080d57610100808354040283529160200191610838565b820191906000526020600020905b81548152906001019060200180831161081b57829003601f168201915b50508481038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156108bb5780601f10610890576101008083540402835291602001916108bb565b820191906000526020600020905b81548152906001019060200180831161089e57829003601f168201915b5050848103825260068152602001807f6163636570740000000000000000000000000000000000000000000000000000815250602001965050505050505060405180910390a1565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018061296b603a913960400191505060405180910390fd5b600260098111156109b657fe5b600760009054906101000a900460ff1660098111156109d157fe5b1480610a025750600360098111156109e557fe5b600760009054906101000a900460ff166009811115610a0057fe5b145b15610a30576004600760006101000a81548160ff02191690836009811115610a2657fe5b0217905550610a81565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260588152602001806129a56058913960600191505060405180910390fd5b7fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845287818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610b6a5780601f10610b3f57610100808354040283529160200191610b6a565b820191906000526020600020905b815481529060010190602001808311610b4d57829003601f168201915b5050848103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610bed5780601f10610bc257610100808354040283529160200191610bed565b820191906000526020600020905b815481529060010190602001808311610bd057829003601f168201915b50508481038252600d8152602001807f6d61726b56616c69646174656400000000000000000000000000000000000000815250602001965050505050505060405180910390a1565b60065481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610ce5575060056009811115610cc757fe5b600760009054906101000a900460ff166009811115610ce257fe5b14155b15610d3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604c815260200180612aa4604c913960600191505060405180910390fd5b60056009811115610d4857fe5b600760009054906101000a900460ff166009811115610d6357fe5b1415610d8d5760078060006101000a81548160ff02191690836009811115610d8757fe5b02179055505b7fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845287818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610e765780601f10610e4b57610100808354040283529160200191610e76565b820191906000526020600020905b815481529060010190602001808311610e5957829003601f168201915b5050848103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610ef95780601f10610ece57610100808354040283529160200191610ef9565b820191906000526020600020905b815481529060010190602001808311610edc57829003601f168201915b5050848103825260068152602001807f72656a6563740000000000000000000000000000000000000000000000000000815250602001965050505050505060405180910390a1565b60055481565b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110035780601f10610fd857610100808354040283529160200191611003565b820191906000526020600020905b815481529060010190602001808311610fe657829003601f168201915b505050505081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603381526020018061282a6033913960400191505060405180910390fd5b600060098111156110c857fe5b600760009054906101000a900460ff1660098111156110e357fe5b14611139576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180612a6a603a913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156111e0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612b2c6031913960400191505060405180910390fd5b33600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600760006101000a81548160ff0219169083600981111561128157fe5b02179055507fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184810384528781815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561136f5780601f106113445761010080835404028352916020019161136f565b820191906000526020600020905b81548152906001019060200180831161135257829003601f168201915b50508481038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156113f25780601f106113c7576101008083540402835291602001916113f2565b820191906000526020600020905b8154815290600101906020018083116113d557829003601f168201915b5050848103825260098152602001807f6d616b654f666665720000000000000000000000000000000000000000000000815250602001965050505050505060405180910390a150565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806129086023913960400191505060405180910390fd5b6006600981111561151457fe5b600760009054906101000a900460ff16600981111561152f57fe5b1415801561156357506008600981111561154557fe5b600760009054906101000a900460ff16600981111561156057fe5b14155b156115b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526051815260200180612b5d6051913960600191505060405180910390fd5b80600490805190602001906115cf929190612750565b506003600760006101000a81548160ff021916908360098111156115ef57fe5b02179055507fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481038452878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156116dd5780601f106116b2576101008083540402835291602001916116dd565b820191906000526020600020905b8154815290600101906020018083116116c057829003601f168201915b50508481038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156117605780601f1061173557610100808354040283529160200191611760565b820191906000526020600020905b81548152906001019060200180831161174357829003601f168201915b5050848103825260118152602001807f7375626d697450726f6f664f66576f726b000000000000000000000000000000815250602001965050505050505060405180910390a150565b6000600554905090565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611859576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806129fd6030913960400191505060405180910390fd5b6000600981111561186657fe5b600760009054906101000a900460ff16600981111561188157fe5b146118d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806128d56033913960400191505060405180910390fd5b8160058190555082600390805190602001906118f4929190612750565b506000600760006101000a81548160ff0219169083600981111561191457fe5b0217905550806006819055507fc4e35ee48689d4f7c3d8ea58efd54155f1ea84ffee48edb29b2cdf3c95320ea860006001336040518080602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015611a055780601f106119da57610100808354040283529160200191611a05565b820191906000526020600020905b8154815290600101906020018083116119e857829003601f168201915b5050838103825285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015611a885780601f10611a5d57610100808354040283529160200191611a88565b820191906000526020600020905b815481529060010190602001808311611a6b57829003601f168201915b50509550505050505060405180910390a1505050565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b345780601f10611b0957610100808354040283529160200191611b34565b820191906000526020600020905b815481529060010190602001808311611b1757829003601f168201915b505050505081565b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015611bc0575060046009811115611ba257fe5b600760009054906101000a900460ff166009811115611bbd57fe5b14155b15611c16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604a81526020018061288b604a913960600191505060405180910390fd5b600060065460055481611c2557fe5b04905060066000815480929190600190039190505550806005540360058190555060006006541415611c7a576009600760006101000a81548160ff02191690836009811115611c7057fe5b0217905550611c9f565b6008600760006101000a81548160ff02191690836009811115611c9957fe5b02179055505b7fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845287818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015611d885780601f10611d5d57610100808354040283529160200191611d88565b820191906000526020600020905b815481529060010190602001808311611d6b57829003601f168201915b5050848103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015611e0b5780601f10611de057610100808354040283529160200191611e0b565b820191906000526020600020905b815481529060010190602001808311611dee57829003601f168201915b50508481038252600b8152602001807f61636365707450726f6f66000000000000000000000000000000000000000000815250602001965050505050505060405180910390a150565b6000600654905090565b60016009811115611e6b57fe5b600760009054906101000a900460ff166009811115611e8657fe5b14611edc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180612a2d603d913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806127f66034913960400191505060405180910390fd5b6002600760006101000a81548160ff02191690836009811115611fa157fe5b02179055507fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184810384528781815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561208f5780601f106120645761010080835404028352916020019161208f565b820191906000526020600020905b81548152906001019060200180831161207257829003601f168201915b50508481038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156121125780601f106120e757610100808354040283529160200191612112565b820191906000526020600020905b8154815290600101906020018083116120f557829003601f168201915b50508481038252600b8152602001807f6163636570744f66666572000000000000000000000000000000000000000000815250602001965050505050505060405180910390a1565b6001600981111561216757fe5b600760009054906101000a900460ff16600981111561218257fe5b141580156121de57503373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15612234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061285d602e913960400191505060405180910390fd5b60078060006101000a81548160ff0219169083600981111561225257fe5b02179055507fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481038452878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156123405780601f1061231557610100808354040283529160200191612340565b820191906000526020600020905b81548152906001019060200180831161232357829003601f168201915b50508481038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156123c35780601f10612398576101008083540402835291602001916123c3565b820191906000526020600020905b8154815290600101906020018083116123a657829003601f168201915b50508481038252600b8152602001807f72656a6563744f66666572000000000000000000000000000000000000000000815250602001965050505050505060405180910390a1565b600760009054906101000a900460ff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146124c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180612af0603c913960400191505060405180910390fd5b600260098111156124d157fe5b600760009054906101000a900460ff1660098111156124ec57fe5b148061251d57506003600981111561250057fe5b600760009054906101000a900460ff16600981111561251b57fe5b145b1561254b576005600760006101000a81548160ff0219169083600981111561254157fe5b021790555061259c565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604081526020018061292b6040913960400191505060405180910390fd5b7fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481038452878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156126855780601f1061265a57610100808354040283529160200191612685565b820191906000526020600020905b81548152906001019060200180831161266857829003601f168201915b50508481038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156127085780601f106126dd57610100808354040283529160200191612708565b820191906000526020600020905b8154815290600101906020018083116126eb57829003601f168201915b50508481038252600f8152602001807f6d61726b496e76616c6964617465640000000000000000000000000000000000815250602001965050505050505060405180910390a1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061279157805160ff19168380011785556127bf565b828001600101855582156127bf579182015b828111156127be5782518255916020019190600101906127a3565b5b5090506127cc91906127d0565b5090565b6127f291905b808211156127ee5760008160009055506001016127d6565b5090565b9056fe6163636570744f666665722066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865206f776e65726d616b654f666665722066756e6374696f6e206e65656420746f206861766520612076616c696461746f72206164647265737354686520636f6e74726163742063616e206f6e6c792062652072656a656374656420627920746865206f776e65726163636570742066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865204275796572207768656e20636f6e74726163742069732076616c696461746564736574547265652066756e6374696f6e2063616e2062652063616c6c6564206f6e6c7920696e206163746976652073746174654f6e6c79206f776e65722063616e207375626d69742070726f6f66206f6620776f726b6d61726b496e76616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c65642069662070656e64696e6756616c69646174696f6e6d61726b56616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279207468652076616c696461746f726d61726b56616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c65642069662050656e64696e6756616c69646174696f6e206f722050656e64696e6750726f6f6656616c69646174696f6e736574547265652066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865206f776e65726163636570744f666665722066756e6374696f6e2063616e206f6e6c792062652063616c6c6564207768656e20616e206f6666657220706c616365642e6d616b654f666665722066756e6374696f6e2063616e206f6e6c792062652063616c6c6564207768656e20696e2041637469766520737461746572656a6570742066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865204275796572207768656e20636f6e747261637420697320696e76616c6964617465646d61726b496e76616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279207468652076616c696461746f726d616b654f666665722066756e6374696f6e2063616e6e6f742062652063616c6c656420627920746865206f776e65722050726f6f66206f6620776f726b2063616e206f6e6c79206265207375626d69747465642061667465722062757965722061636365707473206f7220616e20696e7374616c6c6d656e742069732070616964a265627a7a72315820fe2c3ef21f563a1a9832bfde627631f44126de19d72e41009e8ce54f15e93d2d64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c80638da5cb5b116100b8578063e0c9b3011161007c578063e0c9b301146105b0578063e5b12812146105ba578063eb62df61146105d8578063efd998ad146105e2578063f1b6dccd146105ec578063f5833a2f1461061857610137565b80638da5cb5b1461033b5780638efc905a1461038557806398d5fdca14610440578063baf2a3211461045e578063dfba03bc1461052d57610137565b80636eb588d9116100ff5780636eb588d9146101c25780637150d8ae146101e057806373d4a13a1461022a578063893d20e8146102ad5780638b1264b1146102f757610137565b80632852b71c1461013c5780632ad29c81146101465780632f34a3d7146101505780633a5381b51461016e5780634dc415de146101b8575b600080fd5b610144610622565b005b61014e610903565b005b610158610c35565b6040518082815260200191505060405180910390f35b610176610c3b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101c0610c61565b005b6101ca610f41565b6040518082815260200191505060405180910390f35b6101e8610f47565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610232610f6d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610272578082015181840152602081019050610257565b50505050905090810190601f16801561029f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102b561100b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103396004803603602081101561030d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611035565b005b61034361143b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61043e6004803603602081101561039b57600080fd5b81019080803590602001906401000000008111156103b857600080fd5b8201836020820111156103ca57600080fd5b803590602001918460018302840111640100000000831117156103ec57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611461565b005b6104486117a9565b6040518082815260200191505060405180910390f35b61052b6004803603606081101561047457600080fd5b810190808035906020019064010000000081111561049157600080fd5b8201836020820111156104a357600080fd5b803590602001918460018302840111640100000000831117156104c557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190803590602001909291905050506117b3565b005b610535611a9e565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561057557808201518184015260208101905061055a565b50505050905090810190601f1680156105a25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105b8611b3c565b005b6105c2611e54565b6040518082815260200191505060405180910390f35b6105e0611e5e565b005b6105ea61215a565b005b6105f461240b565b6040518082600981111561060457fe5b60ff16815260200191505060405180910390f35b61062061241e565b005b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156106a657506004600981111561068857fe5b600760009054906101000a900460ff1660098111156106a357fe5b14155b156106fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604a81526020018061288b604a913960600191505060405180910390fd5b6004600981111561070957fe5b600760009054906101000a900460ff16600981111561072457fe5b141561074f576006600760006101000a81548160ff0219169083600981111561074957fe5b02179055505b7fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481038452878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156108385780601f1061080d57610100808354040283529160200191610838565b820191906000526020600020905b81548152906001019060200180831161081b57829003601f168201915b50508481038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156108bb5780601f10610890576101008083540402835291602001916108bb565b820191906000526020600020905b81548152906001019060200180831161089e57829003601f168201915b5050848103825260068152602001807f6163636570740000000000000000000000000000000000000000000000000000815250602001965050505050505060405180910390a1565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a81526020018061296b603a913960400191505060405180910390fd5b600260098111156109b657fe5b600760009054906101000a900460ff1660098111156109d157fe5b1480610a025750600360098111156109e557fe5b600760009054906101000a900460ff166009811115610a0057fe5b145b15610a30576004600760006101000a81548160ff02191690836009811115610a2657fe5b0217905550610a81565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260588152602001806129a56058913960600191505060405180910390fd5b7fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845287818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610b6a5780601f10610b3f57610100808354040283529160200191610b6a565b820191906000526020600020905b815481529060010190602001808311610b4d57829003601f168201915b5050848103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610bed5780601f10610bc257610100808354040283529160200191610bed565b820191906000526020600020905b815481529060010190602001808311610bd057829003601f168201915b50508481038252600d8152602001807f6d61726b56616c69646174656400000000000000000000000000000000000000815250602001965050505050505060405180910390a1565b60065481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610ce5575060056009811115610cc757fe5b600760009054906101000a900460ff166009811115610ce257fe5b14155b15610d3b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604c815260200180612aa4604c913960600191505060405180910390fd5b60056009811115610d4857fe5b600760009054906101000a900460ff166009811115610d6357fe5b1415610d8d5760078060006101000a81548160ff02191690836009811115610d8757fe5b02179055505b7fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845287818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610e765780601f10610e4b57610100808354040283529160200191610e76565b820191906000526020600020905b815481529060010190602001808311610e5957829003601f168201915b5050848103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610ef95780601f10610ece57610100808354040283529160200191610ef9565b820191906000526020600020905b815481529060010190602001808311610edc57829003601f168201915b5050848103825260068152602001807f72656a6563740000000000000000000000000000000000000000000000000000815250602001965050505050505060405180910390a1565b60055481565b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110035780601f10610fd857610100808354040283529160200191611003565b820191906000526020600020905b815481529060010190602001808311610fe657829003601f168201915b505050505081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603381526020018061282a6033913960400191505060405180910390fd5b600060098111156110c857fe5b600760009054906101000a900460ff1660098111156110e357fe5b14611139576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180612a6a603a913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156111e0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180612b2c6031913960400191505060405180910390fd5b33600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600760006101000a81548160ff0219169083600981111561128157fe5b02179055507fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184810384528781815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561136f5780601f106113445761010080835404028352916020019161136f565b820191906000526020600020905b81548152906001019060200180831161135257829003601f168201915b50508481038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156113f25780601f106113c7576101008083540402835291602001916113f2565b820191906000526020600020905b8154815290600101906020018083116113d557829003601f168201915b5050848103825260098152602001807f6d616b654f666665720000000000000000000000000000000000000000000000815250602001965050505050505060405180910390a150565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806129086023913960400191505060405180910390fd5b6006600981111561151457fe5b600760009054906101000a900460ff16600981111561152f57fe5b1415801561156357506008600981111561154557fe5b600760009054906101000a900460ff16600981111561156057fe5b14155b156115b9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526051815260200180612b5d6051913960600191505060405180910390fd5b80600490805190602001906115cf929190612750565b506003600760006101000a81548160ff021916908360098111156115ef57fe5b02179055507fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481038452878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156116dd5780601f106116b2576101008083540402835291602001916116dd565b820191906000526020600020905b8154815290600101906020018083116116c057829003601f168201915b50508481038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156117605780601f1061173557610100808354040283529160200191611760565b820191906000526020600020905b81548152906001019060200180831161174357829003601f168201915b5050848103825260118152602001807f7375626d697450726f6f664f66576f726b000000000000000000000000000000815250602001965050505050505060405180910390a150565b6000600554905090565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611859576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806129fd6030913960400191505060405180910390fd5b6000600981111561186657fe5b600760009054906101000a900460ff16600981111561188157fe5b146118d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001806128d56033913960400191505060405180910390fd5b8160058190555082600390805190602001906118f4929190612750565b506000600760006101000a81548160ff0219169083600981111561191457fe5b0217905550806006819055507fc4e35ee48689d4f7c3d8ea58efd54155f1ea84ffee48edb29b2cdf3c95320ea860006001336040518080602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015611a055780601f106119da57610100808354040283529160200191611a05565b820191906000526020600020905b8154815290600101906020018083116119e857829003601f168201915b5050838103825285818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015611a885780601f10611a5d57610100808354040283529160200191611a88565b820191906000526020600020905b815481529060010190602001808311611a6b57829003601f168201915b50509550505050505060405180910390a1505050565b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b345780601f10611b0957610100808354040283529160200191611b34565b820191906000526020600020905b815481529060010190602001808311611b1757829003601f168201915b505050505081565b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015611bc0575060046009811115611ba257fe5b600760009054906101000a900460ff166009811115611bbd57fe5b14155b15611c16576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604a81526020018061288b604a913960600191505060405180910390fd5b600060065460055481611c2557fe5b04905060066000815480929190600190039190505550806005540360058190555060006006541415611c7a576009600760006101000a81548160ff02191690836009811115611c7057fe5b0217905550611c9f565b6008600760006101000a81548160ff02191690836009811115611c9957fe5b02179055505b7fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848103845287818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015611d885780601f10611d5d57610100808354040283529160200191611d88565b820191906000526020600020905b815481529060010190602001808311611d6b57829003601f168201915b5050848103835286818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015611e0b5780601f10611de057610100808354040283529160200191611e0b565b820191906000526020600020905b815481529060010190602001808311611dee57829003601f168201915b50508481038252600b8152602001807f61636365707450726f6f66000000000000000000000000000000000000000000815250602001965050505050505060405180910390a150565b6000600654905090565b60016009811115611e6b57fe5b600760009054906101000a900460ff166009811115611e8657fe5b14611edc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180612a2d603d913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611f82576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260348152602001806127f66034913960400191505060405180910390fd5b6002600760006101000a81548160ff02191690836009811115611fa157fe5b02179055507fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184810384528781815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561208f5780601f106120645761010080835404028352916020019161208f565b820191906000526020600020905b81548152906001019060200180831161207257829003601f168201915b50508481038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156121125780601f106120e757610100808354040283529160200191612112565b820191906000526020600020905b8154815290600101906020018083116120f557829003601f168201915b50508481038252600b8152602001807f6163636570744f66666572000000000000000000000000000000000000000000815250602001965050505050505060405180910390a1565b6001600981111561216757fe5b600760009054906101000a900460ff16600981111561218257fe5b141580156121de57503373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15612234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061285d602e913960400191505060405180910390fd5b60078060006101000a81548160ff0219169083600981111561225257fe5b02179055507fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481038452878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156123405780601f1061231557610100808354040283529160200191612340565b820191906000526020600020905b81548152906001019060200180831161232357829003601f168201915b50508481038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156123c35780601f10612398576101008083540402835291602001916123c3565b820191906000526020600020905b8154815290600101906020018083116123a657829003601f168201915b50508481038252600b8152602001807f72656a6563744f66666572000000000000000000000000000000000000000000815250602001965050505050505060405180910390a1565b600760009054906101000a900460ff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146124c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180612af0603c913960400191505060405180910390fd5b600260098111156124d157fe5b600760009054906101000a900460ff1660098111156124ec57fe5b148061251d57506003600981111561250057fe5b600760009054906101000a900460ff16600981111561251b57fe5b145b1561254b576005600760006101000a81548160ff0219169083600981111561254157fe5b021790555061259c565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604081526020018061292b6040913960400191505060405180910390fd5b7fbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c6000600133604051808060200180602001806020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481038452878181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156126855780601f1061265a57610100808354040283529160200191612685565b820191906000526020600020905b81548152906001019060200180831161266857829003601f168201915b50508481038352868181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156127085780601f106126dd57610100808354040283529160200191612708565b820191906000526020600020905b8154815290600101906020018083116126eb57829003601f168201915b50508481038252600f8152602001807f6d61726b496e76616c6964617465640000000000000000000000000000000000815250602001965050505050505060405180910390a1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061279157805160ff19168380011785556127bf565b828001600101855582156127bf579182015b828111156127be5782518255916020019190600101906127a3565b5b5090506127cc91906127d0565b5090565b6127f291905b808211156127ee5760008160009055506001016127d6565b5090565b9056fe6163636570744f666665722066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865206f776e65726d616b654f666665722066756e6374696f6e206e65656420746f206861766520612076616c696461746f72206164647265737354686520636f6e74726163742063616e206f6e6c792062652072656a656374656420627920746865206f776e65726163636570742066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865204275796572207768656e20636f6e74726163742069732076616c696461746564736574547265652066756e6374696f6e2063616e2062652063616c6c6564206f6e6c7920696e206163746976652073746174654f6e6c79206f776e65722063616e207375626d69742070726f6f66206f6620776f726b6d61726b496e76616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c65642069662070656e64696e6756616c69646174696f6e6d61726b56616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279207468652076616c696461746f726d61726b56616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c65642069662050656e64696e6756616c69646174696f6e206f722050656e64696e6750726f6f6656616c69646174696f6e736574547265652066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865206f776e65726163636570744f666665722066756e6374696f6e2063616e206f6e6c792062652063616c6c6564207768656e20616e206f6666657220706c616365642e6d616b654f666665722066756e6374696f6e2063616e206f6e6c792062652063616c6c6564207768656e20696e2041637469766520737461746572656a6570742066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865204275796572207768656e20636f6e747261637420697320696e76616c6964617465646d61726b496e76616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279207468652076616c696461746f726d616b654f666665722066756e6374696f6e2063616e6e6f742062652063616c6c656420627920746865206f776e65722050726f6f66206f6620776f726b2063616e206f6e6c79206265207375626d69747465642061667465722062757965722061636365707473206f7220616e20696e7374616c6c6d656e742069732070616964a265627a7a72315820fe2c3ef21f563a1a9832bfde627631f44126de19d72e41009e8ce54f15e93d2d64736f6c63430005100032",
  "sourceMap": "26:6203:0:-;;;534:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;581:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;860:57;8:9:-1;5:2;;;30:1;27;20:12;5:2;860:57:0;900:10;892:5;;:18;;;;;;;;;;;;;;;;;;26:6203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "26:6203:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26:6203:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3181:385;;;:::i;:::-;;4519:533;;;:::i;:::-;;741:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;829:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3572:395;;;:::i;:::-;;711:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;803:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;660:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;660:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1711:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1796:628;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1796:628:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;634:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3973:540;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3973:540:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3973:540:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3973:540:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3973:540:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3973:540:0;;;;;;;;;;;;;;;:::i;:::-;;1523:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;923:594;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;923:594:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;923:594:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;923:594:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;923:594:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;923:594:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;684:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;684:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5058:646;;;:::i;:::-;;1612:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2749:426;;;:::i;:::-;;2430:313;;;:::i;:::-;;774:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5710:517;;;:::i;:::-;;3181:385;3236:5;;;;;;;;;;;3222:19;;:10;:19;;;;:51;;;;;3254:19;3245:28;;;;;;;;:5;;;;;;;;;;;:28;;;;;;;;;;3222:51;3218:166;;;3289:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3218:166;3407:19;3398:28;;;;;;;;:5;;;;;;;;;;;:28;;;;;;;;;3394:90;;;3450:23;3442:5;;:31;;;;;;;;;;;;;;;;;;;;;;;;3394:90;3499:60;3515:7;3524:12;3548:10;3499:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3181:385::o;4519:533::-;4580:10;4567:23;;:9;;;;;;;;;;;:23;;;4563:122;;4606:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4563:122;4708:27;4699:36;;;;;;;;:5;;;;;;;;;;;:36;;;;;;;;;:81;;;;4748:32;4739:41;;;;;;;;:5;;;;;;;;;;;:41;;;;;;;;;4699:81;4695:268;;;4804:19;4796:5;;:27;;;;;;;;;;;;;;;;;;;;;;;;4695:268;;;4854:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4695:268;4978:67;4994:7;5003:12;5034:10;4978:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4519:533::o;741:27::-;;;;:::o;829:24::-;;;;;;;;;;;;;:::o;3572:395::-;3627:5;;;;;;;;;;;3613:19;;:10;:19;;;;:53;;;;;3645:21;3636:30;;;;;;;;:5;;;;;;;;;;;:30;;;;;;;;;;3613:53;3609:170;;;3682:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3609:170;3802:21;3793:30;;;;;;;;:5;;;;;;;;;;;:30;;;;;;;;;3789:96;;;3847:27;3839:5;;:35;;;;;;;;;;;;;;;;;;;;;;;;3789:96;3900:60;3916:7;3925:12;3949:10;3900:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3572:395::o;711:24::-;;;;:::o;803:20::-;;;;;;;;;;;;;:::o;660:18::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1711:79::-;1752:7;1778:5;;;;;;;;;;;1771:12;;1711:79;:::o;1796:628::-;1888:5;1862:32;;:14;:32;;;1858:124;;;1910:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:124;2005:16;1996:25;;;;;;;;:5;;;;;;;;;;;:25;;;;;;;;;1992:124;;2037:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1992:124;2139:10;2130:19;;:5;;;;;;;;;;;:19;;;2126:109;;;2165:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2126:109;2253:10;2245:5;;:18;;;;;;;;;;;;;;;;;;2285:14;2273:9;;:26;;;;;;;;;;;;;;;;;;2317:21;2309:5;;:29;;;;;;;;;;;;;;;;;;;;;;;;2354:63;2370:7;2379:12;2406:10;2354:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:628;:::o;634:20::-;;;;;;;;;;;;;:::o;3973:540::-;4056:10;4047:19;;:5;;;;;;;;;;;:19;;;4043:95;;4082:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4043:95;4161:23;4152:32;;;;;;;;:5;;;;;;;;;;;:32;;;;;;;;;;:70;;;;;4197:25;4188:34;;;;;;;;:5;;;;;;;;;;;:34;;;;;;;;;;4152:70;4148:192;;;4238:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4148:192;4360:9;4350:7;:19;;;;;;;;;;;;:::i;:::-;;4387:32;4379:5;;:40;;;;;;;;;;;;;;;;;;;;;;;;4435:71;4451:7;4460:12;4495:10;4435:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3973:540;:::o;1523:83::-;1564:7;1590:9;;1583:16;;1523:83;:::o;923:594::-;1046:10;1037:19;;:5;;;;;;;;;;;:19;;;1033:108;;1072:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1033:108;1164:16;1155:25;;;;;;;;:5;;;;;;;;;;;:25;;;;;;;;;1151:117;;1196:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1151:117;1289:5;1277:9;:17;;;;1359:9;1352:4;:16;;;;;;;;;;;;:::i;:::-;;1386;1378:5;;:24;;;;;;;;;;;;;;;;;;;;;;;;1427:17;1412:12;:32;;;;1460:50;1476:7;1485:12;1499:10;1460:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;923:594;;;:::o;684:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5058:646::-;5118:5;;;;;;;;;;;5104:19;;:10;:19;;;;:51;;;;;5136:19;5127:28;;;;;;;;:5;;;;;;;;;;;:28;;;;;;;;;;5104:51;5100:166;;;5171:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5100:166;5276:15;5306:12;;5294:9;;:24;;;;;;5276:42;;5365:12;;:14;;;;;;;;;;;;;;5413:7;5401:9;;:19;5389:9;:31;;;;5451:4;5435:12;;:20;5431:186;;;5519:23;5511:5;;:31;;;;;;;;;;;;;;;;;;;;;;;;5431:186;;;5581:25;5573:5;;:33;;;;;;;;;;;;;;;;;;;;;;;;5431:186;5632:65;5648:7;5657:12;5686:10;5632:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5058:646;:::o;1612:93::-;1660:7;1686:12;;1679:19;;1612:93;:::o;2749:426::-;2802:21;2793:30;;;;;;;;:5;;;;;;;;;;;:30;;;;;;;;;2789:132;;2839:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2789:132;2944:10;2935:19;;:5;;;;;;;;;;;:19;;;2931:112;;2970:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2931:112;3061:27;3053:5;;:35;;;;;;;;;;;;;;;;;;;;;;;;3103:65;3119:7;3128:12;3157:10;3103:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2749:426::o;2430:313::-;2485:21;2476:30;;;;;;;;:5;;;;;;;;;;;:30;;;;;;;;;;:53;;;;;2519:10;2510:19;;:5;;;;;;;;;;;:19;;;;2476:53;2472:140;;;2545:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2472:140;2629:27;2621:5;;:35;;;;;;;;;;;;;;;;;;;;;;;;2671:65;2687:7;2696:12;2725:10;2671:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2430:313::o;774:22::-;;;;;;;;;;;;;:::o;5710:517::-;5773:10;5760:23;;:9;;;;;;;;;;;:23;;;5756:124;;5799:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5756:124;5903:27;5894:36;;;;;;;;:5;;;;;;;;;;;:36;;;;;;;;;:81;;;;5943:32;5934:41;;;;;;;;:5;;;;;;;;;;;:41;;;;;;;;;5894:81;5890:246;;;5999:21;5991:5;;:29;;;;;;;;;;;;;;;;;;;;;;;;5890:246;;;6051:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5890:246;6151:69;6167:7;6176:12;6209:10;6151:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5710:517::o;26:6203::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\n\ncontract GreenContract {\n\n     enum StateType {\n        Active,\n        OfferPlaced,\n        PendingValidation,\n        PendingProofValidation,\n        Validated,\n        Invalidated,\n        BuyerAccepted,\n        ContractCancelled,\n        InstallmentPaid,\n        ContractEnded\n    }\n\n    event ContractCreated(string applicationName, string workflowName, address originatingAddress);\n    event ContractUpdated(string applicationName, string workflowName, string action, address originatingAddress);\n\n    string internal appName = \"CryptoForests\";\n    string internal workflowName = \"GreenContract\";\n\n    address public owner;\n    string public data;\n    string public newData;\n    uint256 public listPrice;\n    uint256 public installments;\n    StateType public State;\n\n    address public buyer;\n    address public validator;\n\n    constructor () public {\n        owner = msg.sender;\n    }\n\n    function setTree(string memory inputdata, uint256 price, uint256 inputInstallments) public {\n        \n        if (owner != msg.sender) {\n            revert(\"setTree function can only be called by the owner\");\n        }\n\n        if (State != StateType.Active) {\n            revert(\"setTree function can be called only in active state\");\n        }\n        listPrice = price;\n        // XXX Need tree object instead of data\n        data = inputdata;\n        State = StateType.Active;\n        installments = inputInstallments;\n\n        emit ContractCreated(appName, workflowName, msg.sender);\n    }\n\n    function getPrice() public view returns (uint256) {\n        return listPrice;\n    }\n\n    function getInstallments() public view returns (uint256) {\n        return installments;\n    }\n\n    function getOwner() public view returns (address) {\n        return owner;\n    }\n\n    function makeOffer(address inputvalidator) external {\n        if (inputvalidator == address(0x000)) {\n            revert(\"makeOffer function need to have a validator address\");\n        }\n\n        if (State != StateType.Active) {\n            revert(\"makeOffer function can only be called when in Active state\");\n        }\n\n        if (owner == msg.sender) {\n            revert(\"makeOffer function cannot be called by the owner \");\n        }\n\n        buyer = msg.sender;\n        validator = inputvalidator;\n        State = StateType.OfferPlaced;\n\n        emit ContractUpdated(appName, workflowName, \"makeOffer\", msg.sender);\n    }\n\n    function rejectOffer() public {\n \n        if (State != StateType.OfferPlaced && owner != msg.sender) {\n            revert(\"The contract can only be rejected by the owner\");\n        }\n        State = StateType.ContractCancelled;\n        emit ContractUpdated(appName, workflowName, \"rejectOffer\", msg.sender);\n    }\n\n    function acceptOffer() public {\n        if (State != StateType.OfferPlaced) {\n            revert(\"acceptOffer function can only be called when an offer placed.\");\n        }\n\n        if (owner != msg.sender) {\n            revert(\"acceptOffer function can only be called by the owner\");\n        }\n\n        State = StateType.PendingValidation;\n        emit ContractUpdated(appName, workflowName, \"acceptOffer\", msg.sender);\n    }\n\n    function accept() external {\n        if (msg.sender != buyer && State != StateType.Validated) {\n            revert(\"accept function can only be called by the Buyer when contract is validated\");\n        }\n\n        if (State == StateType.Validated) {\n            State = StateType.BuyerAccepted;\n        }\n\n        emit ContractUpdated(appName, workflowName, \"accept\", msg.sender);\n    }\n\n    function reject() external {\n        if (msg.sender != buyer && State != StateType.Invalidated) {\n            revert(\"rejept function can only be called by the Buyer when contract is invalidated\");\n        }\n\n        if (State == StateType.Invalidated) {\n            State = StateType.ContractCancelled;\n        }\n\n        emit ContractUpdated(appName, workflowName, \"reject\", msg.sender);\n    }\n\n    function submitProofOfWork(string memory proofdata) public {\n\n        if (owner != msg.sender) {\n            revert(\"Only owner can submit proof of work\");\n        }\n\n        if (State != StateType.BuyerAccepted && State != StateType.InstallmentPaid) {\n            revert(\"Proof of work can only be submitted after buyer accepts or an installment is paid\");\n        }\n\n        newData = proofdata;\n        State = StateType.PendingProofValidation;\n\n        emit ContractUpdated(appName, workflowName, \"submitProofOfWork\", msg.sender);\n    }\n\n    function markValidated() external {\n        if (validator != msg.sender) {\n            revert(\"markValidated function can only be called by the validator\");\n        }\n\n        if (State == StateType.PendingValidation || State == StateType.PendingProofValidation) {\n            State = StateType.Validated;\n        } else {\n            revert(\"markValidated function can only be called if PendingValidation or PendingProofValidation\");\n        }\n\n        emit ContractUpdated(appName, workflowName, \"markValidated\", msg.sender);\n    }\n\n    function acceptProof() external {\n        if (msg.sender != buyer && State != StateType.Validated) {\n            revert(\"accept function can only be called by the Buyer when contract is validated\");\n        }\n\n        uint256 payment = listPrice / installments;\n        // XXX Make payment\n        \n        installments--;\n        listPrice = listPrice - payment;\n\n        if (installments == 0x00) {\n            // No more pending payments\n            State = StateType.ContractEnded;\n        } else {\n            State = StateType.InstallmentPaid;\n        }\n\n        emit ContractUpdated(appName, workflowName, \"acceptProof\", msg.sender);\n    }\n\n    function markInvalidated() external {\n        if (validator != msg.sender) {\n            revert(\"markInvalidated function can only be called by the validator\");\n        }\n\n        if (State == StateType.PendingValidation || State == StateType.PendingProofValidation) {\n            State = StateType.Invalidated;\n        } else {\n            revert(\"markInvalidated function can only be called if pendingValidation\");\n        }\n\n        emit ContractUpdated(appName, workflowName, \"markInvalidated\", msg.sender);\n    }\n}",
  "sourcePath": "/home/leledumbodev/devpost/CryptoForests/contracts/GreenContract.sol",
  "ast": {
    "absolutePath": "/home/leledumbodev/devpost/CryptoForests/contracts/GreenContract.sol",
    "exportedSymbols": {
      "GreenContract": [
        536
      ]
    },
    "id": 537,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 536,
        "linearizedBaseContracts": [
          536
        ],
        "name": "GreenContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "GreenContract.StateType",
            "id": 12,
            "members": [
              {
                "id": 2,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "82:6:0"
              },
              {
                "id": 3,
                "name": "OfferPlaced",
                "nodeType": "EnumValue",
                "src": "98:11:0"
              },
              {
                "id": 4,
                "name": "PendingValidation",
                "nodeType": "EnumValue",
                "src": "119:17:0"
              },
              {
                "id": 5,
                "name": "PendingProofValidation",
                "nodeType": "EnumValue",
                "src": "146:22:0"
              },
              {
                "id": 6,
                "name": "Validated",
                "nodeType": "EnumValue",
                "src": "178:9:0"
              },
              {
                "id": 7,
                "name": "Invalidated",
                "nodeType": "EnumValue",
                "src": "197:11:0"
              },
              {
                "id": 8,
                "name": "BuyerAccepted",
                "nodeType": "EnumValue",
                "src": "218:13:0"
              },
              {
                "id": 9,
                "name": "ContractCancelled",
                "nodeType": "EnumValue",
                "src": "241:17:0"
              },
              {
                "id": 10,
                "name": "InstallmentPaid",
                "nodeType": "EnumValue",
                "src": "268:15:0"
              },
              {
                "id": 11,
                "name": "ContractEnded",
                "nodeType": "EnumValue",
                "src": "293:13:0"
              }
            ],
            "name": "StateType",
            "nodeType": "EnumDefinition",
            "src": "57:255:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 20,
            "name": "ContractCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "name": "applicationName",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "340:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "name": "workflowName",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "364:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "364:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "indexed": false,
                  "name": "originatingAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "385:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "339:73:0"
            },
            "src": "318:95:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 30,
            "name": "ContractUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "name": "applicationName",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "440:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "name": "workflowName",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "464:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "name": "action",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "485:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "name": "originatingAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "500:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "439:88:0"
            },
            "src": "418:110:0"
          },
          {
            "constant": false,
            "id": 33,
            "name": "appName",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "534:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 31,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "534:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "43727970746f466f7265737473",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "560:15:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bd8bcab5e212c0fed92d6710c1c71cb0e98cfd1b1370afb566253a9d8c30c51f",
                "typeString": "literal_string \"CryptoForests\""
              },
              "value": "CryptoForests"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 36,
            "name": "workflowName",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "581:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 34,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "581:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "477265656e436f6e7472616374",
              "id": 35,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "612:15:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_42324303d606b5743589130c419d3d7eb79b18d30aa880305a25fed814c92f63",
                "typeString": "literal_string \"GreenContract\""
              },
              "value": "GreenContract"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 38,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "634:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "634:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 40,
            "name": "data",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "660:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 39,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "660:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 42,
            "name": "newData",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "684:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 41,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "684:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 44,
            "name": "listPrice",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "711:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "711:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 46,
            "name": "installments",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "741:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "741:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 48,
            "name": "State",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "774:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_StateType_$12",
              "typeString": "enum GreenContract.StateType"
            },
            "typeName": {
              "contractScope": null,
              "id": 47,
              "name": "StateType",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12,
              "src": "774:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_StateType_$12",
                "typeString": "enum GreenContract.StateType"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 50,
            "name": "buyer",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "803:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "803:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 52,
            "name": "validator",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "829:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 51,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "829:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "882:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 55,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "892:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "900:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "900:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "892:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "892:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 61,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "872:2:0"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "882:0:0"
            },
            "scope": 536,
            "src": "860:57:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "1014:503:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 70,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1037:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "1046:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1046:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1037:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 79,
                  "nodeType": "IfStatement",
                  "src": "1033:108:0",
                  "trueBody": {
                    "id": 78,
                    "nodeType": "Block",
                    "src": "1058:83:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "736574547265652066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865206f776e6572",
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1079:50:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_85e795cc3aa141247a1d72c1147e62a4572a369f724f3b375e71a66f0a8312b8",
                                "typeString": "literal_string \"setTree function can only be called by the owner\""
                              },
                              "value": "setTree function can only be called by the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_85e795cc3aa141247a1d72c1147e62a4572a369f724f3b375e71a66f0a8312b8",
                                "typeString": "literal_string \"setTree function can only be called by the owner\""
                              }
                            ],
                            "id": 74,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "1072:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1072:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77,
                        "nodeType": "ExpressionStatement",
                        "src": "1072:58:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1155:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1164:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1164:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "1155:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 89,
                  "nodeType": "IfStatement",
                  "src": "1151:117:0",
                  "trueBody": {
                    "id": 88,
                    "nodeType": "Block",
                    "src": "1182:86:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "736574547265652066756e6374696f6e2063616e2062652063616c6c6564206f6e6c7920696e20616374697665207374617465",
                              "id": 85,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1203:53:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1d9764c7d067ca8cbde7d7b7f189aacd58be43031b8adb7d36677ad8653f0cb2",
                                "typeString": "literal_string \"setTree function can be called only in active state\""
                              },
                              "value": "setTree function can be called only in active state"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1d9764c7d067ca8cbde7d7b7f189aacd58be43031b8adb7d36677ad8653f0cb2",
                                "typeString": "literal_string \"setTree function can be called only in active state\""
                              }
                            ],
                            "id": 84,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "1196:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1196:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87,
                        "nodeType": "ExpressionStatement",
                        "src": "1196:61:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "listPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1277:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "1289:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1277:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 94,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1352:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "inputdata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "1359:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1352:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1378:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 99,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1386:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1386:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "1378:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "installments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1412:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 104,
                      "name": "inputInstallments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1427:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1412:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:32:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 108,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1476:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1485:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "1499:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1499:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 107,
                      "name": "ContractCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1460:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,address)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "EmitStatement",
                  "src": "1455:55:0"
                }
              ]
            },
            "documentation": null,
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTree",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "inputdata",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "940:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "965:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "name": "inputInstallments",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "980:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "939:67:0"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:0:0"
            },
            "scope": 536,
            "src": "923:594:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1573:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 120,
                    "name": "listPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "1590:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 119,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "1583:16:0"
                }
              ]
            },
            "documentation": null,
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:2:0"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1564:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1563:9:0"
            },
            "scope": 536,
            "src": "1523:83:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1669:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 128,
                    "name": "installments",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46,
                    "src": "1686:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 127,
                  "id": 129,
                  "nodeType": "Return",
                  "src": "1679:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInstallments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1636:2:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "1660:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1660:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1659:9:0"
            },
            "scope": 536,
            "src": "1612:93:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "1761:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 136,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "1778:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 135,
                  "id": 137,
                  "nodeType": "Return",
                  "src": "1771:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1728:2:0"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1752:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1751:9:0"
            },
            "scope": 536,
            "src": "1711:79:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "1848:576:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 144,
                      "name": "inputvalidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1862:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3078303030",
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1888:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1880:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1880:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1862:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 154,
                  "nodeType": "IfStatement",
                  "src": "1858:124:0",
                  "trueBody": {
                    "id": 153,
                    "nodeType": "Block",
                    "src": "1896:86:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d616b654f666665722066756e6374696f6e206e65656420746f206861766520612076616c696461746f722061646472657373",
                              "id": 150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1917:53:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0bb4ecaf661e2f951f9835971bc3cbe2f15c018c9c7a9e6220dc91cb2af28560",
                                "typeString": "literal_string \"makeOffer function need to have a validator address\""
                              },
                              "value": "makeOffer function need to have a validator address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_0bb4ecaf661e2f951f9835971bc3cbe2f15c018c9c7a9e6220dc91cb2af28560",
                                "typeString": "literal_string \"makeOffer function need to have a validator address\""
                              }
                            ],
                            "id": 149,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "1910:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1910:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 152,
                        "nodeType": "ExpressionStatement",
                        "src": "1910:61:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 155,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1996:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2005:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2005:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "1996:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 164,
                  "nodeType": "IfStatement",
                  "src": "1992:124:0",
                  "trueBody": {
                    "id": 163,
                    "nodeType": "Block",
                    "src": "2023:93:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d616b654f666665722066756e6374696f6e2063616e206f6e6c792062652063616c6c6564207768656e20696e20416374697665207374617465",
                              "id": 160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2044:60:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c250397dcc052f1cee1c17e265ad52ae2d09a3dcd1cb506c352a661d114b7606",
                                "typeString": "literal_string \"makeOffer function can only be called when in Active state\""
                              },
                              "value": "makeOffer function can only be called when in Active state"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c250397dcc052f1cee1c17e265ad52ae2d09a3dcd1cb506c352a661d114b7606",
                                "typeString": "literal_string \"makeOffer function can only be called when in Active state\""
                              }
                            ],
                            "id": 159,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "2037:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2037:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "2037:68:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 165,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2130:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "2139:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2139:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2130:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 174,
                  "nodeType": "IfStatement",
                  "src": "2126:109:0",
                  "trueBody": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "2151:84:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d616b654f666665722066756e6374696f6e2063616e6e6f742062652063616c6c656420627920746865206f776e657220",
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2172:51:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f6322749bbeb05728a21d19caab77e9114d65f6d270ad64587d18f92c90c3e73",
                                "typeString": "literal_string \"makeOffer function cannot be called by the owner \""
                              },
                              "value": "makeOffer function cannot be called by the owner "
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f6322749bbeb05728a21d19caab77e9114d65f6d270ad64587d18f92c90c3e73",
                                "typeString": "literal_string \"makeOffer function cannot be called by the owner \""
                              }
                            ],
                            "id": 169,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "2165:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2165:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 172,
                        "nodeType": "ExpressionStatement",
                        "src": "2165:59:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 175,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "2245:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "2253:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2253:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2245:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2245:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 180,
                      "name": "validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "2273:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 181,
                      "name": "inputvalidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "2285:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2273:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "2273:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 184,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2309:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2317:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OfferPlaced",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2317:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "2309:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:29:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2370:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2379:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d616b654f66666572",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2393:11:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a962d3dc7fef05315fbce01300ff51ca75fcb5878e4f4bc0ba0a73ddd6482db",
                          "typeString": "literal_string \"makeOffer\""
                        },
                        "value": "makeOffer"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 193,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "2406:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2406:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a962d3dc7fef05315fbce01300ff51ca75fcb5878e4f4bc0ba0a73ddd6482db",
                          "typeString": "literal_string \"makeOffer\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 189,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2354:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2354:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "EmitStatement",
                  "src": "2349:68:0"
                }
              ]
            },
            "documentation": null,
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeOffer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "name": "inputvalidator",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "1815:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1814:24:0"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:0:0"
            },
            "scope": 536,
            "src": "1796:628:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "2460:283:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 201,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2476:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 202,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "2485:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "OfferPlaced",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2485:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "2476:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "2510:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 206,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "2519:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2519:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "2510:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2476:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 215,
                  "nodeType": "IfStatement",
                  "src": "2472:140:0",
                  "trueBody": {
                    "id": 214,
                    "nodeType": "Block",
                    "src": "2531:81:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "54686520636f6e74726163742063616e206f6e6c792062652072656a656374656420627920746865206f776e6572",
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2552:48:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1544bada0b475a99e98e314d6f54773fe33f0f91044b9e64715f60b8f2dba172",
                                "typeString": "literal_string \"The contract can only be rejected by the owner\""
                              },
                              "value": "The contract can only be rejected by the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1544bada0b475a99e98e314d6f54773fe33f0f91044b9e64715f60b8f2dba172",
                                "typeString": "literal_string \"The contract can only be rejected by the owner\""
                              }
                            ],
                            "id": 210,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "2545:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2545:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 213,
                        "nodeType": "ExpressionStatement",
                        "src": "2545:56:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 216,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2621:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2629:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ContractCancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2629:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "2621:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "2621:35:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 222,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2687:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 223,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2696:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "72656a6563744f66666572",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2710:13:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f07dc06d9069e535fddecbfeb1f38e222164b8da217610854a98a2d0099bc21b",
                          "typeString": "literal_string \"rejectOffer\""
                        },
                        "value": "rejectOffer"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 225,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "2725:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2725:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f07dc06d9069e535fddecbfeb1f38e222164b8da217610854a98a2d0099bc21b",
                          "typeString": "literal_string \"rejectOffer\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 221,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2671:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2671:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "EmitStatement",
                  "src": "2666:70:0"
                }
              ]
            },
            "documentation": null,
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rejectOffer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2450:2:0"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2460:0:0"
            },
            "scope": 536,
            "src": "2430:313:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "2779:396:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2793:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2802:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OfferPlaced",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2802:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "2793:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 242,
                  "nodeType": "IfStatement",
                  "src": "2789:132:0",
                  "trueBody": {
                    "id": 241,
                    "nodeType": "Block",
                    "src": "2825:96:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6163636570744f666665722066756e6374696f6e2063616e206f6e6c792062652063616c6c6564207768656e20616e206f6666657220706c616365642e",
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2846:63:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8bd442fa901deca6e6ad58e5ccb0fb6142d8e38befcdede25c02b975663bf680",
                                "typeString": "literal_string \"acceptOffer function can only be called when an offer placed.\""
                              },
                              "value": "acceptOffer function can only be called when an offer placed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_8bd442fa901deca6e6ad58e5ccb0fb6142d8e38befcdede25c02b975663bf680",
                                "typeString": "literal_string \"acceptOffer function can only be called when an offer placed.\""
                              }
                            ],
                            "id": 237,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "2839:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2839:71:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 240,
                        "nodeType": "ExpressionStatement",
                        "src": "2839:71:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 243,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2935:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "2944:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2944:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2935:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 252,
                  "nodeType": "IfStatement",
                  "src": "2931:112:0",
                  "trueBody": {
                    "id": 251,
                    "nodeType": "Block",
                    "src": "2956:87:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6163636570744f666665722066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865206f776e6572",
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2977:54:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_07998c1b115adf3bc4ff2385e95d915532e124d479faa3d0d8647057a04b4de3",
                                "typeString": "literal_string \"acceptOffer function can only be called by the owner\""
                              },
                              "value": "acceptOffer function can only be called by the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_07998c1b115adf3bc4ff2385e95d915532e124d479faa3d0d8647057a04b4de3",
                                "typeString": "literal_string \"acceptOffer function can only be called by the owner\""
                              }
                            ],
                            "id": 247,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "2970:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2970:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 250,
                        "nodeType": "ExpressionStatement",
                        "src": "2970:62:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 253,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "3053:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 254,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3061:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PendingValidation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3061:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "3053:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "3053:35:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 259,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3119:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 260,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3128:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6163636570744f66666572",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3142:13:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c01ea54af605527300833a86aa671ae663e947b79e1928a757fd295e56ad3fc6",
                          "typeString": "literal_string \"acceptOffer\""
                        },
                        "value": "acceptOffer"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 262,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "3157:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3157:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c01ea54af605527300833a86aa671ae663e947b79e1928a757fd295e56ad3fc6",
                          "typeString": "literal_string \"acceptOffer\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 258,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "3103:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3103:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "EmitStatement",
                  "src": "3098:70:0"
                }
              ]
            },
            "documentation": null,
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptOffer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2769:2:0"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2779:0:0"
            },
            "scope": 536,
            "src": "2749:426:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "3208:358:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 270,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "3222:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3222:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 272,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "3236:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3222:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 274,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3245:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 275,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "3254:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Validated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3254:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "3245:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3222:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 284,
                  "nodeType": "IfStatement",
                  "src": "3218:166:0",
                  "trueBody": {
                    "id": 283,
                    "nodeType": "Block",
                    "src": "3275:109:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6163636570742066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865204275796572207768656e20636f6e74726163742069732076616c696461746564",
                              "id": 280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3296:76:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1d20d54e865798e14a556d7ed343580bf0c298af37bbab4cb28da01fb6469579",
                                "typeString": "literal_string \"accept function can only be called by the Buyer when contract is validated\""
                              },
                              "value": "accept function can only be called by the Buyer when contract is validated"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1d20d54e865798e14a556d7ed343580bf0c298af37bbab4cb28da01fb6469579",
                                "typeString": "literal_string \"accept function can only be called by the Buyer when contract is validated\""
                              }
                            ],
                            "id": 279,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "3289:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3289:84:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 282,
                        "nodeType": "ExpressionStatement",
                        "src": "3289:84:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 285,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "3398:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 286,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3407:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Validated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3407:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "3398:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 295,
                  "nodeType": "IfStatement",
                  "src": "3394:90:0",
                  "trueBody": {
                    "id": 294,
                    "nodeType": "Block",
                    "src": "3428:56:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 289,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "3442:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 290,
                              "name": "StateType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "3450:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                                "typeString": "type(enum GreenContract.StateType)"
                              }
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BuyerAccepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3450:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "src": "3442:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StateType_$12",
                            "typeString": "enum GreenContract.StateType"
                          }
                        },
                        "id": 293,
                        "nodeType": "ExpressionStatement",
                        "src": "3442:31:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 297,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3515:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 298,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3524:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "616363657074",
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3538:8:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c931b330a0a6a71f55cf846629c867a922298dcca36c063aa6bc85cef0038657",
                          "typeString": "literal_string \"accept\""
                        },
                        "value": "accept"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 300,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "3548:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3548:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c931b330a0a6a71f55cf846629c867a922298dcca36c063aa6bc85cef0038657",
                          "typeString": "literal_string \"accept\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 296,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "3499:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3499:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "EmitStatement",
                  "src": "3494:65:0"
                }
              ]
            },
            "documentation": null,
            "id": 305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "accept",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3196:2:0"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3208:0:0"
            },
            "scope": 536,
            "src": "3181:385:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "3599:368:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "3613:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3613:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 310,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "3627:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3613:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 312,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3636:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 313,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "3645:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Invalidated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3645:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "3636:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3613:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 322,
                  "nodeType": "IfStatement",
                  "src": "3609:170:0",
                  "trueBody": {
                    "id": 321,
                    "nodeType": "Block",
                    "src": "3668:111:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "72656a6570742066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865204275796572207768656e20636f6e747261637420697320696e76616c696461746564",
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3689:78:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cee03d4578449e343af0951b5456cea70bb52db8c6ffb9048834c9e6a53e0fc9",
                                "typeString": "literal_string \"rejept function can only be called by the Buyer when contract is invalidated\""
                              },
                              "value": "rejept function can only be called by the Buyer when contract is invalidated"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_cee03d4578449e343af0951b5456cea70bb52db8c6ffb9048834c9e6a53e0fc9",
                                "typeString": "literal_string \"rejept function can only be called by the Buyer when contract is invalidated\""
                              }
                            ],
                            "id": 317,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "3682:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3682:86:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 320,
                        "nodeType": "ExpressionStatement",
                        "src": "3682:86:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 323,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "3793:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 324,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3802:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Invalidated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3802:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "3793:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 333,
                  "nodeType": "IfStatement",
                  "src": "3789:96:0",
                  "trueBody": {
                    "id": 332,
                    "nodeType": "Block",
                    "src": "3825:60:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 327,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "3839:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 328,
                              "name": "StateType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "3847:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                                "typeString": "type(enum GreenContract.StateType)"
                              }
                            },
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ContractCancelled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3847:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "src": "3839:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StateType_$12",
                            "typeString": "enum GreenContract.StateType"
                          }
                        },
                        "id": 331,
                        "nodeType": "ExpressionStatement",
                        "src": "3839:35:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 335,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3916:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 336,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3925:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "72656a656374",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3939:8:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56d05910402dac18f69572e11f66162905dd2a05170c2975fe4e665791f81fa1",
                          "typeString": "literal_string \"reject\""
                        },
                        "value": "reject"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 338,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "3949:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3949:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56d05910402dac18f69572e11f66162905dd2a05170c2975fe4e665791f81fa1",
                          "typeString": "literal_string \"reject\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 334,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "3900:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3900:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "EmitStatement",
                  "src": "3895:65:0"
                }
              ]
            },
            "documentation": null,
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3587:2:0"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3599:0:0"
            },
            "scope": 536,
            "src": "3572:395:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "4032:481:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 348,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "4047:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 349,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "4056:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4056:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4047:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 357,
                  "nodeType": "IfStatement",
                  "src": "4043:95:0",
                  "trueBody": {
                    "id": 356,
                    "nodeType": "Block",
                    "src": "4068:70:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f6e6c79206f776e65722063616e207375626d69742070726f6f66206f6620776f726b",
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4089:37:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e98403258b5cd1d79890696506cb47198e6a285062c96f5c48026b93bff3f04",
                                "typeString": "literal_string \"Only owner can submit proof of work\""
                              },
                              "value": "Only owner can submit proof of work"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_5e98403258b5cd1d79890696506cb47198e6a285062c96f5c48026b93bff3f04",
                                "typeString": "literal_string \"Only owner can submit proof of work\""
                              }
                            ],
                            "id": 352,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "4082:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4082:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 355,
                        "nodeType": "ExpressionStatement",
                        "src": "4082:45:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 358,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4152:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 359,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "4161:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "BuyerAccepted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4161:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "4152:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4188:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 363,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "4197:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "InstallmentPaid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4197:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "4188:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4152:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 372,
                  "nodeType": "IfStatement",
                  "src": "4148:192:0",
                  "trueBody": {
                    "id": 371,
                    "nodeType": "Block",
                    "src": "4224:116:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f6f66206f6620776f726b2063616e206f6e6c79206265207375626d69747465642061667465722062757965722061636365707473206f7220616e20696e7374616c6c6d656e742069732070616964",
                              "id": 368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4245:83:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f869db833e322fb4d10ae014c0126ee9404cbed2d3a06370e992908bc361f52f",
                                "typeString": "literal_string \"Proof of work can only be submitted after buyer accepts or an installment is paid\""
                              },
                              "value": "Proof of work can only be submitted after buyer accepts or an installment is paid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f869db833e322fb4d10ae014c0126ee9404cbed2d3a06370e992908bc361f52f",
                                "typeString": "literal_string \"Proof of work can only be submitted after buyer accepts or an installment is paid\""
                              }
                            ],
                            "id": 367,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "4238:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4238:91:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 370,
                        "nodeType": "ExpressionStatement",
                        "src": "4238:91:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 373,
                      "name": "newData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "4350:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 374,
                      "name": "proofdata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "4360:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4350:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "4350:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 377,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "4379:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 378,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "4387:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PendingProofValidation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4387:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "4379:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "4379:40:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 383,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4451:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 384,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "4460:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7375626d697450726f6f664f66576f726b",
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4474:19:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e5c562e2041a44675dc77b2de4976ea0f0991f4796fa44cbdfc155715ae6da8",
                          "typeString": "literal_string \"submitProofOfWork\""
                        },
                        "value": "submitProofOfWork"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 386,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "4495:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4495:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e5c562e2041a44675dc77b2de4976ea0f0991f4796fa44cbdfc155715ae6da8",
                          "typeString": "literal_string \"submitProofOfWork\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 382,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "4435:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4435:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "EmitStatement",
                  "src": "4430:76:0"
                }
              ]
            },
            "documentation": null,
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitProofOfWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "name": "proofdata",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "4000:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4000:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3999:25:0"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4032:0:0"
            },
            "scope": 536,
            "src": "3973:540:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "4553:499:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 394,
                      "name": "validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "4567:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 395,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "4580:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4580:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4567:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 403,
                  "nodeType": "IfStatement",
                  "src": "4563:122:0",
                  "trueBody": {
                    "id": 402,
                    "nodeType": "Block",
                    "src": "4592:93:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d61726b56616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279207468652076616c696461746f72",
                              "id": 399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4613:60:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_741434d8d9be86d17fbcfb49566f067dbefc67b4c1c8cd48e1235794f69dacf2",
                                "typeString": "literal_string \"markValidated function can only be called by the validator\""
                              },
                              "value": "markValidated function can only be called by the validator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_741434d8d9be86d17fbcfb49566f067dbefc67b4c1c8cd48e1235794f69dacf2",
                                "typeString": "literal_string \"markValidated function can only be called by the validator\""
                              }
                            ],
                            "id": 398,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "4606:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4606:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 401,
                        "nodeType": "ExpressionStatement",
                        "src": "4606:68:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 404,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4699:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 405,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "4708:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PendingValidation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4708:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "4699:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 408,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4739:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 409,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "4748:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PendingProofValidation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4748:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "4739:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4699:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 423,
                    "nodeType": "Block",
                    "src": "4840:123:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d61726b56616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c65642069662050656e64696e6756616c69646174696f6e206f722050656e64696e6750726f6f6656616c69646174696f6e",
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4861:90:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_85dc0f7adf9d64b9c80fe4b420304bc55fea0a069d0c37a35b3505ffcf700608",
                                "typeString": "literal_string \"markValidated function can only be called if PendingValidation or PendingProofValidation\""
                              },
                              "value": "markValidated function can only be called if PendingValidation or PendingProofValidation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_85dc0f7adf9d64b9c80fe4b420304bc55fea0a069d0c37a35b3505ffcf700608",
                                "typeString": "literal_string \"markValidated function can only be called if PendingValidation or PendingProofValidation\""
                              }
                            ],
                            "id": 419,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "4854:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4854:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 422,
                        "nodeType": "ExpressionStatement",
                        "src": "4854:98:0"
                      }
                    ]
                  },
                  "id": 424,
                  "nodeType": "IfStatement",
                  "src": "4695:268:0",
                  "trueBody": {
                    "id": 418,
                    "nodeType": "Block",
                    "src": "4782:52:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 413,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "4796:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 414,
                              "name": "StateType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "4804:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                                "typeString": "type(enum GreenContract.StateType)"
                              }
                            },
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Validated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4804:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "src": "4796:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StateType_$12",
                            "typeString": "enum GreenContract.StateType"
                          }
                        },
                        "id": 417,
                        "nodeType": "ExpressionStatement",
                        "src": "4796:27:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 426,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4994:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "5003:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d61726b56616c696461746564",
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5017:15:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ee51e659cfdb5bfb17fafb601f55c0c0894285be1cc72aa755ed2c70f05eed0",
                          "typeString": "literal_string \"markValidated\""
                        },
                        "value": "markValidated"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 429,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "5034:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5034:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ee51e659cfdb5bfb17fafb601f55c0c0894285be1cc72aa755ed2c70f05eed0",
                          "typeString": "literal_string \"markValidated\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 425,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "4978:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4978:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "EmitStatement",
                  "src": "4973:72:0"
                }
              ]
            },
            "documentation": null,
            "id": 434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "markValidated",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4541:2:0"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4553:0:0"
            },
            "scope": 536,
            "src": "4519:533:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "5090:614:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 437,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "5104:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5104:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 439,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "5118:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5104:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 441,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "5127:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 442,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "5136:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Validated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5136:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "5127:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5104:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 451,
                  "nodeType": "IfStatement",
                  "src": "5100:166:0",
                  "trueBody": {
                    "id": 450,
                    "nodeType": "Block",
                    "src": "5157:109:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6163636570742066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865204275796572207768656e20636f6e74726163742069732076616c696461746564",
                              "id": 447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5178:76:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1d20d54e865798e14a556d7ed343580bf0c298af37bbab4cb28da01fb6469579",
                                "typeString": "literal_string \"accept function can only be called by the Buyer when contract is validated\""
                              },
                              "value": "accept function can only be called by the Buyer when contract is validated"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1d20d54e865798e14a556d7ed343580bf0c298af37bbab4cb28da01fb6469579",
                                "typeString": "literal_string \"accept function can only be called by the Buyer when contract is validated\""
                              }
                            ],
                            "id": 446,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "5171:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5171:84:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 449,
                        "nodeType": "ExpressionStatement",
                        "src": "5171:84:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 453,
                      "name": "payment",
                      "nodeType": "VariableDeclaration",
                      "scope": 491,
                      "src": "5276:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5276:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 457,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 454,
                      "name": "listPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "5294:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 455,
                      "name": "installments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5306:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5294:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5276:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "5365:14:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 458,
                      "name": "installments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5365:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "5365:14:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 461,
                      "name": "listPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "5389:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 462,
                        "name": "listPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "5401:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "5413:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5401:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5389:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "5389:31:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 467,
                      "name": "installments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5435:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30783030",
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5451:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0x00"
                    },
                    "src": "5435:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "5559:58:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 476,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "5573:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 477,
                              "name": "StateType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "5581:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                                "typeString": "type(enum GreenContract.StateType)"
                              }
                            },
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallmentPaid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5581:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "src": "5573:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StateType_$12",
                            "typeString": "enum GreenContract.StateType"
                          }
                        },
                        "id": 480,
                        "nodeType": "ExpressionStatement",
                        "src": "5573:33:0"
                      }
                    ]
                  },
                  "id": 482,
                  "nodeType": "IfStatement",
                  "src": "5431:186:0",
                  "trueBody": {
                    "id": 475,
                    "nodeType": "Block",
                    "src": "5457:96:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 470,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "5511:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 471,
                              "name": "StateType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "5519:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                                "typeString": "type(enum GreenContract.StateType)"
                              }
                            },
                            "id": 472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ContractEnded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5519:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "src": "5511:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StateType_$12",
                            "typeString": "enum GreenContract.StateType"
                          }
                        },
                        "id": 474,
                        "nodeType": "ExpressionStatement",
                        "src": "5511:31:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 484,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "5648:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 485,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "5657:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "61636365707450726f6f66",
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5671:13:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c4b32d9b245fd1d5399eda05fbcc77e43d07047024337f5b60eedc63717b3c7",
                          "typeString": "literal_string \"acceptProof\""
                        },
                        "value": "acceptProof"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "5686:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5686:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c4b32d9b245fd1d5399eda05fbcc77e43d07047024337f5b60eedc63717b3c7",
                          "typeString": "literal_string \"acceptProof\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 483,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "5632:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5632:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 490,
                  "nodeType": "EmitStatement",
                  "src": "5627:70:0"
                }
              ]
            },
            "documentation": null,
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5078:2:0"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5090:0:0"
            },
            "scope": 536,
            "src": "5058:646:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "5746:481:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 495,
                      "name": "validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "5760:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 496,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "5773:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5773:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5760:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 504,
                  "nodeType": "IfStatement",
                  "src": "5756:124:0",
                  "trueBody": {
                    "id": 503,
                    "nodeType": "Block",
                    "src": "5785:95:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d61726b496e76616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279207468652076616c696461746f72",
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5806:62:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d66c35aa22b15684f3421d87f8f6f46c6a33006f09ac1e9a35e658512a772d85",
                                "typeString": "literal_string \"markInvalidated function can only be called by the validator\""
                              },
                              "value": "markInvalidated function can only be called by the validator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_d66c35aa22b15684f3421d87f8f6f46c6a33006f09ac1e9a35e658512a772d85",
                                "typeString": "literal_string \"markInvalidated function can only be called by the validator\""
                              }
                            ],
                            "id": 499,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "5799:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5799:70:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 502,
                        "nodeType": "ExpressionStatement",
                        "src": "5799:70:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 505,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "5894:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 506,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "5903:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PendingValidation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5903:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "5894:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 509,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "5934:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 510,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "5943:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PendingProofValidation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5943:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "5934:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5894:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 524,
                    "nodeType": "Block",
                    "src": "6037:99:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d61726b496e76616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c65642069662070656e64696e6756616c69646174696f6e",
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6058:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7025a08eeb2e3338d39620091b0cc40be386f2b329e903c250a2d3ae1e91815a",
                                "typeString": "literal_string \"markInvalidated function can only be called if pendingValidation\""
                              },
                              "value": "markInvalidated function can only be called if pendingValidation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_7025a08eeb2e3338d39620091b0cc40be386f2b329e903c250a2d3ae1e91815a",
                                "typeString": "literal_string \"markInvalidated function can only be called if pendingValidation\""
                              }
                            ],
                            "id": 520,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "6051:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6051:74:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 523,
                        "nodeType": "ExpressionStatement",
                        "src": "6051:74:0"
                      }
                    ]
                  },
                  "id": 525,
                  "nodeType": "IfStatement",
                  "src": "5890:246:0",
                  "trueBody": {
                    "id": 519,
                    "nodeType": "Block",
                    "src": "5977:54:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 514,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "5991:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 515,
                              "name": "StateType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "5999:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                                "typeString": "type(enum GreenContract.StateType)"
                              }
                            },
                            "id": 516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Invalidated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5999:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "src": "5991:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StateType_$12",
                            "typeString": "enum GreenContract.StateType"
                          }
                        },
                        "id": 518,
                        "nodeType": "ExpressionStatement",
                        "src": "5991:29:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 527,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "6167:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 528,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "6176:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d61726b496e76616c696461746564",
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6190:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4672daf853c0873ca7703b9f2a3b0f09f3b119b814ea019f9854135e38e99c71",
                          "typeString": "literal_string \"markInvalidated\""
                        },
                        "value": "markInvalidated"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 530,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "6209:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6209:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4672daf853c0873ca7703b9f2a3b0f09f3b119b814ea019f9854135e38e99c71",
                          "typeString": "literal_string \"markInvalidated\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 526,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "6151:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6151:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 533,
                  "nodeType": "EmitStatement",
                  "src": "6146:74:0"
                }
              ]
            },
            "documentation": null,
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "markInvalidated",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5734:2:0"
            },
            "returnParameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5746:0:0"
            },
            "scope": 536,
            "src": "5710:517:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 537,
        "src": "26:6203:0"
      }
    ],
    "src": "0:6229:0"
  },
  "legacyAST": {
    "absolutePath": "/home/leledumbodev/devpost/CryptoForests/contracts/GreenContract.sol",
    "exportedSymbols": {
      "GreenContract": [
        536
      ]
    },
    "id": 537,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 536,
        "linearizedBaseContracts": [
          536
        ],
        "name": "GreenContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "GreenContract.StateType",
            "id": 12,
            "members": [
              {
                "id": 2,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "82:6:0"
              },
              {
                "id": 3,
                "name": "OfferPlaced",
                "nodeType": "EnumValue",
                "src": "98:11:0"
              },
              {
                "id": 4,
                "name": "PendingValidation",
                "nodeType": "EnumValue",
                "src": "119:17:0"
              },
              {
                "id": 5,
                "name": "PendingProofValidation",
                "nodeType": "EnumValue",
                "src": "146:22:0"
              },
              {
                "id": 6,
                "name": "Validated",
                "nodeType": "EnumValue",
                "src": "178:9:0"
              },
              {
                "id": 7,
                "name": "Invalidated",
                "nodeType": "EnumValue",
                "src": "197:11:0"
              },
              {
                "id": 8,
                "name": "BuyerAccepted",
                "nodeType": "EnumValue",
                "src": "218:13:0"
              },
              {
                "id": 9,
                "name": "ContractCancelled",
                "nodeType": "EnumValue",
                "src": "241:17:0"
              },
              {
                "id": 10,
                "name": "InstallmentPaid",
                "nodeType": "EnumValue",
                "src": "268:15:0"
              },
              {
                "id": 11,
                "name": "ContractEnded",
                "nodeType": "EnumValue",
                "src": "293:13:0"
              }
            ],
            "name": "StateType",
            "nodeType": "EnumDefinition",
            "src": "57:255:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 20,
            "name": "ContractCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "indexed": false,
                  "name": "applicationName",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "340:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "indexed": false,
                  "name": "workflowName",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "364:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "364:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "indexed": false,
                  "name": "originatingAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 20,
                  "src": "385:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "339:73:0"
            },
            "src": "318:95:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 30,
            "name": "ContractUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "indexed": false,
                  "name": "applicationName",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "440:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "indexed": false,
                  "name": "workflowName",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "464:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "indexed": false,
                  "name": "action",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "485:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28,
                  "indexed": false,
                  "name": "originatingAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "500:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "439:88:0"
            },
            "src": "418:110:0"
          },
          {
            "constant": false,
            "id": 33,
            "name": "appName",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "534:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 31,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "534:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "43727970746f466f7265737473",
              "id": 32,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "560:15:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bd8bcab5e212c0fed92d6710c1c71cb0e98cfd1b1370afb566253a9d8c30c51f",
                "typeString": "literal_string \"CryptoForests\""
              },
              "value": "CryptoForests"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 36,
            "name": "workflowName",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "581:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 34,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "581:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "477265656e436f6e7472616374",
              "id": 35,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "612:15:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_42324303d606b5743589130c419d3d7eb79b18d30aa880305a25fed814c92f63",
                "typeString": "literal_string \"GreenContract\""
              },
              "value": "GreenContract"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 38,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "634:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "634:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 40,
            "name": "data",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "660:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 39,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "660:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 42,
            "name": "newData",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "684:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 41,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "684:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 44,
            "name": "listPrice",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "711:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "711:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 46,
            "name": "installments",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "741:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "741:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 48,
            "name": "State",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "774:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_StateType_$12",
              "typeString": "enum GreenContract.StateType"
            },
            "typeName": {
              "contractScope": null,
              "id": 47,
              "name": "StateType",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12,
              "src": "774:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_StateType_$12",
                "typeString": "enum GreenContract.StateType"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 50,
            "name": "buyer",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "803:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "803:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 52,
            "name": "validator",
            "nodeType": "VariableDeclaration",
            "scope": 536,
            "src": "829:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 51,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "829:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "882:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 55,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "892:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 56,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "900:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "900:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "892:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "892:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 61,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "872:2:0"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "882:0:0"
            },
            "scope": 536,
            "src": "860:57:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "1014:503:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 70,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1037:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 71,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "1046:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1046:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1037:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 79,
                  "nodeType": "IfStatement",
                  "src": "1033:108:0",
                  "trueBody": {
                    "id": 78,
                    "nodeType": "Block",
                    "src": "1058:83:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "736574547265652066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865206f776e6572",
                              "id": 75,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1079:50:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_85e795cc3aa141247a1d72c1147e62a4572a369f724f3b375e71a66f0a8312b8",
                                "typeString": "literal_string \"setTree function can only be called by the owner\""
                              },
                              "value": "setTree function can only be called by the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_85e795cc3aa141247a1d72c1147e62a4572a369f724f3b375e71a66f0a8312b8",
                                "typeString": "literal_string \"setTree function can only be called by the owner\""
                              }
                            ],
                            "id": 74,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "1072:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1072:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77,
                        "nodeType": "ExpressionStatement",
                        "src": "1072:58:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1155:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 81,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1164:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1164:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "1155:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 89,
                  "nodeType": "IfStatement",
                  "src": "1151:117:0",
                  "trueBody": {
                    "id": 88,
                    "nodeType": "Block",
                    "src": "1182:86:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "736574547265652066756e6374696f6e2063616e2062652063616c6c6564206f6e6c7920696e20616374697665207374617465",
                              "id": 85,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1203:53:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1d9764c7d067ca8cbde7d7b7f189aacd58be43031b8adb7d36677ad8653f0cb2",
                                "typeString": "literal_string \"setTree function can be called only in active state\""
                              },
                              "value": "setTree function can be called only in active state"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1d9764c7d067ca8cbde7d7b7f189aacd58be43031b8adb7d36677ad8653f0cb2",
                                "typeString": "literal_string \"setTree function can be called only in active state\""
                              }
                            ],
                            "id": 84,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "1196:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1196:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87,
                        "nodeType": "ExpressionStatement",
                        "src": "1196:61:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 90,
                      "name": "listPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1277:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "1289:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1277:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 94,
                      "name": "data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1352:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "inputdata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "1359:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1352:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1352:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1378:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 99,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1386:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1386:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "1378:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1378:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 103,
                      "name": "installments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1412:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 104,
                      "name": "inputInstallments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "1427:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1412:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:32:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 108,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1476:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 109,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1485:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 110,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "1499:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1499:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 107,
                      "name": "ContractCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1460:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,address)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1460:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "EmitStatement",
                  "src": "1455:55:0"
                }
              ]
            },
            "documentation": null,
            "id": 115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTree",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "inputdata",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "940:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "965:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "name": "inputInstallments",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "980:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "939:67:0"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:0:0"
            },
            "scope": 536,
            "src": "923:594:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "1573:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 120,
                    "name": "listPrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "1590:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 119,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "1583:16:0"
                }
              ]
            },
            "documentation": null,
            "id": 123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:2:0"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "1564:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1563:9:0"
            },
            "scope": 536,
            "src": "1523:83:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1669:36:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 128,
                    "name": "installments",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46,
                    "src": "1686:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 127,
                  "id": 129,
                  "nodeType": "Return",
                  "src": "1679:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInstallments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1636:2:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "1660:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1660:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1659:9:0"
            },
            "scope": 536,
            "src": "1612:93:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "1761:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 136,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38,
                    "src": "1778:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 135,
                  "id": 137,
                  "nodeType": "Return",
                  "src": "1771:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1728:2:0"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 139,
                  "src": "1752:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1751:9:0"
            },
            "scope": 536,
            "src": "1711:79:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 197,
              "nodeType": "Block",
              "src": "1848:576:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 144,
                      "name": "inputvalidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "1862:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3078303030",
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1888:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1880:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1880:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1862:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 154,
                  "nodeType": "IfStatement",
                  "src": "1858:124:0",
                  "trueBody": {
                    "id": 153,
                    "nodeType": "Block",
                    "src": "1896:86:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d616b654f666665722066756e6374696f6e206e65656420746f206861766520612076616c696461746f722061646472657373",
                              "id": 150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1917:53:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0bb4ecaf661e2f951f9835971bc3cbe2f15c018c9c7a9e6220dc91cb2af28560",
                                "typeString": "literal_string \"makeOffer function need to have a validator address\""
                              },
                              "value": "makeOffer function need to have a validator address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_0bb4ecaf661e2f951f9835971bc3cbe2f15c018c9c7a9e6220dc91cb2af28560",
                                "typeString": "literal_string \"makeOffer function need to have a validator address\""
                              }
                            ],
                            "id": 149,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "1910:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1910:61:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 152,
                        "nodeType": "ExpressionStatement",
                        "src": "1910:61:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 155,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1996:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 156,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2005:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2005:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "1996:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 164,
                  "nodeType": "IfStatement",
                  "src": "1992:124:0",
                  "trueBody": {
                    "id": 163,
                    "nodeType": "Block",
                    "src": "2023:93:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d616b654f666665722066756e6374696f6e2063616e206f6e6c792062652063616c6c6564207768656e20696e20416374697665207374617465",
                              "id": 160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2044:60:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c250397dcc052f1cee1c17e265ad52ae2d09a3dcd1cb506c352a661d114b7606",
                                "typeString": "literal_string \"makeOffer function can only be called when in Active state\""
                              },
                              "value": "makeOffer function can only be called when in Active state"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c250397dcc052f1cee1c17e265ad52ae2d09a3dcd1cb506c352a661d114b7606",
                                "typeString": "literal_string \"makeOffer function can only be called when in Active state\""
                              }
                            ],
                            "id": 159,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "2037:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2037:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "2037:68:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 165,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2130:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 166,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "2139:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2139:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2130:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 174,
                  "nodeType": "IfStatement",
                  "src": "2126:109:0",
                  "trueBody": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "2151:84:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d616b654f666665722066756e6374696f6e2063616e6e6f742062652063616c6c656420627920746865206f776e657220",
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2172:51:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f6322749bbeb05728a21d19caab77e9114d65f6d270ad64587d18f92c90c3e73",
                                "typeString": "literal_string \"makeOffer function cannot be called by the owner \""
                              },
                              "value": "makeOffer function cannot be called by the owner "
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f6322749bbeb05728a21d19caab77e9114d65f6d270ad64587d18f92c90c3e73",
                                "typeString": "literal_string \"makeOffer function cannot be called by the owner \""
                              }
                            ],
                            "id": 169,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "2165:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2165:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 172,
                        "nodeType": "ExpressionStatement",
                        "src": "2165:59:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 175,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50,
                      "src": "2245:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "2253:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2253:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2245:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "2245:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 180,
                      "name": "validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "2273:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 181,
                      "name": "inputvalidator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "2285:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2273:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 183,
                  "nodeType": "ExpressionStatement",
                  "src": "2273:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 184,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2309:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 185,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2317:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OfferPlaced",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2317:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "2309:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    }
                  },
                  "id": 188,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:29:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2370:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2379:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d616b654f66666572",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2393:11:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a962d3dc7fef05315fbce01300ff51ca75fcb5878e4f4bc0ba0a73ddd6482db",
                          "typeString": "literal_string \"makeOffer\""
                        },
                        "value": "makeOffer"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 193,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "2406:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2406:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a962d3dc7fef05315fbce01300ff51ca75fcb5878e4f4bc0ba0a73ddd6482db",
                          "typeString": "literal_string \"makeOffer\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 189,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2354:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2354:63:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "EmitStatement",
                  "src": "2349:68:0"
                }
              ]
            },
            "documentation": null,
            "id": 198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "makeOffer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "name": "inputvalidator",
                  "nodeType": "VariableDeclaration",
                  "scope": 198,
                  "src": "1815:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1814:24:0"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:0:0"
            },
            "scope": 536,
            "src": "1796:628:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "2460:283:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 201,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "2476:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 202,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "2485:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "OfferPlaced",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2485:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "2476:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "2510:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 206,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "2519:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2519:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "2510:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2476:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 215,
                  "nodeType": "IfStatement",
                  "src": "2472:140:0",
                  "trueBody": {
                    "id": 214,
                    "nodeType": "Block",
                    "src": "2531:81:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "54686520636f6e74726163742063616e206f6e6c792062652072656a656374656420627920746865206f776e6572",
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2552:48:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1544bada0b475a99e98e314d6f54773fe33f0f91044b9e64715f60b8f2dba172",
                                "typeString": "literal_string \"The contract can only be rejected by the owner\""
                              },
                              "value": "The contract can only be rejected by the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1544bada0b475a99e98e314d6f54773fe33f0f91044b9e64715f60b8f2dba172",
                                "typeString": "literal_string \"The contract can only be rejected by the owner\""
                              }
                            ],
                            "id": 210,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "2545:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2545:56:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 213,
                        "nodeType": "ExpressionStatement",
                        "src": "2545:56:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 216,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2621:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 217,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2629:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ContractCancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2629:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "2621:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    }
                  },
                  "id": 220,
                  "nodeType": "ExpressionStatement",
                  "src": "2621:35:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 222,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2687:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 223,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2696:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "72656a6563744f66666572",
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2710:13:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f07dc06d9069e535fddecbfeb1f38e222164b8da217610854a98a2d0099bc21b",
                          "typeString": "literal_string \"rejectOffer\""
                        },
                        "value": "rejectOffer"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 225,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "2725:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2725:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f07dc06d9069e535fddecbfeb1f38e222164b8da217610854a98a2d0099bc21b",
                          "typeString": "literal_string \"rejectOffer\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 221,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "2671:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2671:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "EmitStatement",
                  "src": "2666:70:0"
                }
              ]
            },
            "documentation": null,
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rejectOffer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2450:2:0"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2460:0:0"
            },
            "scope": 536,
            "src": "2430:313:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 266,
              "nodeType": "Block",
              "src": "2779:396:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 233,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "2793:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2802:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OfferPlaced",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2802:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "2793:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 242,
                  "nodeType": "IfStatement",
                  "src": "2789:132:0",
                  "trueBody": {
                    "id": 241,
                    "nodeType": "Block",
                    "src": "2825:96:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6163636570744f666665722066756e6374696f6e2063616e206f6e6c792062652063616c6c6564207768656e20616e206f6666657220706c616365642e",
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2846:63:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8bd442fa901deca6e6ad58e5ccb0fb6142d8e38befcdede25c02b975663bf680",
                                "typeString": "literal_string \"acceptOffer function can only be called when an offer placed.\""
                              },
                              "value": "acceptOffer function can only be called when an offer placed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_8bd442fa901deca6e6ad58e5ccb0fb6142d8e38befcdede25c02b975663bf680",
                                "typeString": "literal_string \"acceptOffer function can only be called when an offer placed.\""
                              }
                            ],
                            "id": 237,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "2839:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2839:71:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 240,
                        "nodeType": "ExpressionStatement",
                        "src": "2839:71:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 243,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "2935:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 244,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "2944:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2944:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2935:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 252,
                  "nodeType": "IfStatement",
                  "src": "2931:112:0",
                  "trueBody": {
                    "id": 251,
                    "nodeType": "Block",
                    "src": "2956:87:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6163636570744f666665722066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865206f776e6572",
                              "id": 248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2977:54:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_07998c1b115adf3bc4ff2385e95d915532e124d479faa3d0d8647057a04b4de3",
                                "typeString": "literal_string \"acceptOffer function can only be called by the owner\""
                              },
                              "value": "acceptOffer function can only be called by the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_07998c1b115adf3bc4ff2385e95d915532e124d479faa3d0d8647057a04b4de3",
                                "typeString": "literal_string \"acceptOffer function can only be called by the owner\""
                              }
                            ],
                            "id": 247,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "2970:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2970:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 250,
                        "nodeType": "ExpressionStatement",
                        "src": "2970:62:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 253,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "3053:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 254,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3061:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PendingValidation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3061:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "3053:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "3053:35:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 259,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3119:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 260,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3128:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6163636570744f66666572",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3142:13:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c01ea54af605527300833a86aa671ae663e947b79e1928a757fd295e56ad3fc6",
                          "typeString": "literal_string \"acceptOffer\""
                        },
                        "value": "acceptOffer"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 262,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "3157:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3157:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c01ea54af605527300833a86aa671ae663e947b79e1928a757fd295e56ad3fc6",
                          "typeString": "literal_string \"acceptOffer\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 258,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "3103:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3103:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 265,
                  "nodeType": "EmitStatement",
                  "src": "3098:70:0"
                }
              ]
            },
            "documentation": null,
            "id": 267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptOffer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2769:2:0"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2779:0:0"
            },
            "scope": 536,
            "src": "2749:426:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "3208:358:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 270,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "3222:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3222:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 272,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "3236:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3222:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 274,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3245:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 275,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "3254:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Validated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3254:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "3245:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3222:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 284,
                  "nodeType": "IfStatement",
                  "src": "3218:166:0",
                  "trueBody": {
                    "id": 283,
                    "nodeType": "Block",
                    "src": "3275:109:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6163636570742066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865204275796572207768656e20636f6e74726163742069732076616c696461746564",
                              "id": 280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3296:76:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1d20d54e865798e14a556d7ed343580bf0c298af37bbab4cb28da01fb6469579",
                                "typeString": "literal_string \"accept function can only be called by the Buyer when contract is validated\""
                              },
                              "value": "accept function can only be called by the Buyer when contract is validated"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1d20d54e865798e14a556d7ed343580bf0c298af37bbab4cb28da01fb6469579",
                                "typeString": "literal_string \"accept function can only be called by the Buyer when contract is validated\""
                              }
                            ],
                            "id": 279,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "3289:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3289:84:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 282,
                        "nodeType": "ExpressionStatement",
                        "src": "3289:84:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 285,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "3398:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 286,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3407:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Validated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3407:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "3398:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 295,
                  "nodeType": "IfStatement",
                  "src": "3394:90:0",
                  "trueBody": {
                    "id": 294,
                    "nodeType": "Block",
                    "src": "3428:56:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 289,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "3442:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 290,
                              "name": "StateType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "3450:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                                "typeString": "type(enum GreenContract.StateType)"
                              }
                            },
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BuyerAccepted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3450:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "src": "3442:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StateType_$12",
                            "typeString": "enum GreenContract.StateType"
                          }
                        },
                        "id": 293,
                        "nodeType": "ExpressionStatement",
                        "src": "3442:31:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 297,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3515:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 298,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3524:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "616363657074",
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3538:8:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c931b330a0a6a71f55cf846629c867a922298dcca36c063aa6bc85cef0038657",
                          "typeString": "literal_string \"accept\""
                        },
                        "value": "accept"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 300,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "3548:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3548:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c931b330a0a6a71f55cf846629c867a922298dcca36c063aa6bc85cef0038657",
                          "typeString": "literal_string \"accept\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 296,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "3499:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3499:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "EmitStatement",
                  "src": "3494:65:0"
                }
              ]
            },
            "documentation": null,
            "id": 305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "accept",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3196:2:0"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3208:0:0"
            },
            "scope": 536,
            "src": "3181:385:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "3599:368:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "3613:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3613:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 310,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "3627:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3613:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 312,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "3636:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 313,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "3645:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Invalidated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3645:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "3636:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3613:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 322,
                  "nodeType": "IfStatement",
                  "src": "3609:170:0",
                  "trueBody": {
                    "id": 321,
                    "nodeType": "Block",
                    "src": "3668:111:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "72656a6570742066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865204275796572207768656e20636f6e747261637420697320696e76616c696461746564",
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3689:78:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cee03d4578449e343af0951b5456cea70bb52db8c6ffb9048834c9e6a53e0fc9",
                                "typeString": "literal_string \"rejept function can only be called by the Buyer when contract is invalidated\""
                              },
                              "value": "rejept function can only be called by the Buyer when contract is invalidated"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_cee03d4578449e343af0951b5456cea70bb52db8c6ffb9048834c9e6a53e0fc9",
                                "typeString": "literal_string \"rejept function can only be called by the Buyer when contract is invalidated\""
                              }
                            ],
                            "id": 317,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "3682:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3682:86:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 320,
                        "nodeType": "ExpressionStatement",
                        "src": "3682:86:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 323,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "3793:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 324,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3802:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Invalidated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3802:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "3793:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 333,
                  "nodeType": "IfStatement",
                  "src": "3789:96:0",
                  "trueBody": {
                    "id": 332,
                    "nodeType": "Block",
                    "src": "3825:60:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 327,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "3839:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 328,
                              "name": "StateType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "3847:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                                "typeString": "type(enum GreenContract.StateType)"
                              }
                            },
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ContractCancelled",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3847:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "src": "3839:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StateType_$12",
                            "typeString": "enum GreenContract.StateType"
                          }
                        },
                        "id": 331,
                        "nodeType": "ExpressionStatement",
                        "src": "3839:35:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 335,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "3916:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 336,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "3925:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "72656a656374",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3939:8:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56d05910402dac18f69572e11f66162905dd2a05170c2975fe4e665791f81fa1",
                          "typeString": "literal_string \"reject\""
                        },
                        "value": "reject"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 338,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "3949:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3949:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56d05910402dac18f69572e11f66162905dd2a05170c2975fe4e665791f81fa1",
                          "typeString": "literal_string \"reject\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 334,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "3900:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3900:60:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "EmitStatement",
                  "src": "3895:65:0"
                }
              ]
            },
            "documentation": null,
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3587:2:0"
            },
            "returnParameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3599:0:0"
            },
            "scope": 536,
            "src": "3572:395:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 390,
              "nodeType": "Block",
              "src": "4032:481:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 348,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "4047:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 349,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "4056:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4056:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4047:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 357,
                  "nodeType": "IfStatement",
                  "src": "4043:95:0",
                  "trueBody": {
                    "id": 356,
                    "nodeType": "Block",
                    "src": "4068:70:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "4f6e6c79206f776e65722063616e207375626d69742070726f6f66206f6620776f726b",
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4089:37:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e98403258b5cd1d79890696506cb47198e6a285062c96f5c48026b93bff3f04",
                                "typeString": "literal_string \"Only owner can submit proof of work\""
                              },
                              "value": "Only owner can submit proof of work"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_5e98403258b5cd1d79890696506cb47198e6a285062c96f5c48026b93bff3f04",
                                "typeString": "literal_string \"Only owner can submit proof of work\""
                              }
                            ],
                            "id": 352,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "4082:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4082:45:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 355,
                        "nodeType": "ExpressionStatement",
                        "src": "4082:45:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 358,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4152:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 359,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "4161:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "BuyerAccepted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4161:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "4152:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 362,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4188:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 363,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "4197:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "InstallmentPaid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4197:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "4188:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4152:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 372,
                  "nodeType": "IfStatement",
                  "src": "4148:192:0",
                  "trueBody": {
                    "id": 371,
                    "nodeType": "Block",
                    "src": "4224:116:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f6f66206f6620776f726b2063616e206f6e6c79206265207375626d69747465642061667465722062757965722061636365707473206f7220616e20696e7374616c6c6d656e742069732070616964",
                              "id": 368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4245:83:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f869db833e322fb4d10ae014c0126ee9404cbed2d3a06370e992908bc361f52f",
                                "typeString": "literal_string \"Proof of work can only be submitted after buyer accepts or an installment is paid\""
                              },
                              "value": "Proof of work can only be submitted after buyer accepts or an installment is paid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_f869db833e322fb4d10ae014c0126ee9404cbed2d3a06370e992908bc361f52f",
                                "typeString": "literal_string \"Proof of work can only be submitted after buyer accepts or an installment is paid\""
                              }
                            ],
                            "id": 367,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "4238:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4238:91:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 370,
                        "nodeType": "ExpressionStatement",
                        "src": "4238:91:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 373,
                      "name": "newData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "4350:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 374,
                      "name": "proofdata",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "4360:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4350:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "4350:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 377,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "4379:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 378,
                        "name": "StateType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "4387:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                          "typeString": "type(enum GreenContract.StateType)"
                        }
                      },
                      "id": 379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PendingProofValidation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4387:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      }
                    },
                    "src": "4379:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_StateType_$12",
                      "typeString": "enum GreenContract.StateType"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "4379:40:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 383,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4451:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 384,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "4460:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7375626d697450726f6f664f66576f726b",
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4474:19:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e5c562e2041a44675dc77b2de4976ea0f0991f4796fa44cbdfc155715ae6da8",
                          "typeString": "literal_string \"submitProofOfWork\""
                        },
                        "value": "submitProofOfWork"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 386,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "4495:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4495:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e5c562e2041a44675dc77b2de4976ea0f0991f4796fa44cbdfc155715ae6da8",
                          "typeString": "literal_string \"submitProofOfWork\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 382,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "4435:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4435:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "EmitStatement",
                  "src": "4430:76:0"
                }
              ]
            },
            "documentation": null,
            "id": 391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitProofOfWork",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "name": "proofdata",
                  "nodeType": "VariableDeclaration",
                  "scope": 391,
                  "src": "4000:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4000:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3999:25:0"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4032:0:0"
            },
            "scope": 536,
            "src": "3973:540:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 433,
              "nodeType": "Block",
              "src": "4553:499:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 394,
                      "name": "validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "4567:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 395,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "4580:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4580:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4567:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 403,
                  "nodeType": "IfStatement",
                  "src": "4563:122:0",
                  "trueBody": {
                    "id": 402,
                    "nodeType": "Block",
                    "src": "4592:93:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d61726b56616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279207468652076616c696461746f72",
                              "id": 399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4613:60:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_741434d8d9be86d17fbcfb49566f067dbefc67b4c1c8cd48e1235794f69dacf2",
                                "typeString": "literal_string \"markValidated function can only be called by the validator\""
                              },
                              "value": "markValidated function can only be called by the validator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_741434d8d9be86d17fbcfb49566f067dbefc67b4c1c8cd48e1235794f69dacf2",
                                "typeString": "literal_string \"markValidated function can only be called by the validator\""
                              }
                            ],
                            "id": 398,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "4606:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4606:68:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 401,
                        "nodeType": "ExpressionStatement",
                        "src": "4606:68:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 404,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4699:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 405,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "4708:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PendingValidation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4708:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "4699:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 408,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "4739:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 409,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "4748:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PendingProofValidation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4748:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "4739:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4699:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 423,
                    "nodeType": "Block",
                    "src": "4840:123:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d61726b56616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c65642069662050656e64696e6756616c69646174696f6e206f722050656e64696e6750726f6f6656616c69646174696f6e",
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4861:90:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_85dc0f7adf9d64b9c80fe4b420304bc55fea0a069d0c37a35b3505ffcf700608",
                                "typeString": "literal_string \"markValidated function can only be called if PendingValidation or PendingProofValidation\""
                              },
                              "value": "markValidated function can only be called if PendingValidation or PendingProofValidation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_85dc0f7adf9d64b9c80fe4b420304bc55fea0a069d0c37a35b3505ffcf700608",
                                "typeString": "literal_string \"markValidated function can only be called if PendingValidation or PendingProofValidation\""
                              }
                            ],
                            "id": 419,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "4854:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4854:98:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 422,
                        "nodeType": "ExpressionStatement",
                        "src": "4854:98:0"
                      }
                    ]
                  },
                  "id": 424,
                  "nodeType": "IfStatement",
                  "src": "4695:268:0",
                  "trueBody": {
                    "id": 418,
                    "nodeType": "Block",
                    "src": "4782:52:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 413,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "4796:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 414,
                              "name": "StateType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "4804:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                                "typeString": "type(enum GreenContract.StateType)"
                              }
                            },
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Validated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4804:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "src": "4796:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StateType_$12",
                            "typeString": "enum GreenContract.StateType"
                          }
                        },
                        "id": 417,
                        "nodeType": "ExpressionStatement",
                        "src": "4796:27:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 426,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "4994:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "5003:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d61726b56616c696461746564",
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5017:15:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ee51e659cfdb5bfb17fafb601f55c0c0894285be1cc72aa755ed2c70f05eed0",
                          "typeString": "literal_string \"markValidated\""
                        },
                        "value": "markValidated"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 429,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "5034:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5034:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ee51e659cfdb5bfb17fafb601f55c0c0894285be1cc72aa755ed2c70f05eed0",
                          "typeString": "literal_string \"markValidated\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 425,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "4978:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4978:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "EmitStatement",
                  "src": "4973:72:0"
                }
              ]
            },
            "documentation": null,
            "id": 434,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "markValidated",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4541:2:0"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4553:0:0"
            },
            "scope": 536,
            "src": "4519:533:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "5090:614:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 437,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "5104:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5104:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 439,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "5118:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5104:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 441,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "5127:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 442,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "5136:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Validated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5136:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "5127:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5104:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 451,
                  "nodeType": "IfStatement",
                  "src": "5100:166:0",
                  "trueBody": {
                    "id": 450,
                    "nodeType": "Block",
                    "src": "5157:109:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6163636570742066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865204275796572207768656e20636f6e74726163742069732076616c696461746564",
                              "id": 447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5178:76:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1d20d54e865798e14a556d7ed343580bf0c298af37bbab4cb28da01fb6469579",
                                "typeString": "literal_string \"accept function can only be called by the Buyer when contract is validated\""
                              },
                              "value": "accept function can only be called by the Buyer when contract is validated"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1d20d54e865798e14a556d7ed343580bf0c298af37bbab4cb28da01fb6469579",
                                "typeString": "literal_string \"accept function can only be called by the Buyer when contract is validated\""
                              }
                            ],
                            "id": 446,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "5171:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5171:84:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 449,
                        "nodeType": "ExpressionStatement",
                        "src": "5171:84:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 453,
                      "name": "payment",
                      "nodeType": "VariableDeclaration",
                      "scope": 491,
                      "src": "5276:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5276:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 457,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 454,
                      "name": "listPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "5294:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 455,
                      "name": "installments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5306:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5294:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5276:42:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "5365:14:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 458,
                      "name": "installments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5365:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 460,
                  "nodeType": "ExpressionStatement",
                  "src": "5365:14:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 461,
                      "name": "listPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "5389:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 462,
                        "name": "listPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "5401:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "5413:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5401:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5389:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "5389:31:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 467,
                      "name": "installments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "5435:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30783030",
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5451:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0x00"
                    },
                    "src": "5435:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "5559:58:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 476,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "5573:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 477,
                              "name": "StateType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "5581:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                                "typeString": "type(enum GreenContract.StateType)"
                              }
                            },
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "InstallmentPaid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5581:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "src": "5573:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StateType_$12",
                            "typeString": "enum GreenContract.StateType"
                          }
                        },
                        "id": 480,
                        "nodeType": "ExpressionStatement",
                        "src": "5573:33:0"
                      }
                    ]
                  },
                  "id": 482,
                  "nodeType": "IfStatement",
                  "src": "5431:186:0",
                  "trueBody": {
                    "id": 475,
                    "nodeType": "Block",
                    "src": "5457:96:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 470,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "5511:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 471,
                              "name": "StateType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "5519:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                                "typeString": "type(enum GreenContract.StateType)"
                              }
                            },
                            "id": 472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ContractEnded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5519:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "src": "5511:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StateType_$12",
                            "typeString": "enum GreenContract.StateType"
                          }
                        },
                        "id": 474,
                        "nodeType": "ExpressionStatement",
                        "src": "5511:31:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 484,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "5648:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 485,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "5657:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "61636365707450726f6f66",
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5671:13:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c4b32d9b245fd1d5399eda05fbcc77e43d07047024337f5b60eedc63717b3c7",
                          "typeString": "literal_string \"acceptProof\""
                        },
                        "value": "acceptProof"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 487,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "5686:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5686:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c4b32d9b245fd1d5399eda05fbcc77e43d07047024337f5b60eedc63717b3c7",
                          "typeString": "literal_string \"acceptProof\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 483,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "5632:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5632:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 490,
                  "nodeType": "EmitStatement",
                  "src": "5627:70:0"
                }
              ]
            },
            "documentation": null,
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "acceptProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5078:2:0"
            },
            "returnParameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5090:0:0"
            },
            "scope": 536,
            "src": "5058:646:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 534,
              "nodeType": "Block",
              "src": "5746:481:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 495,
                      "name": "validator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "5760:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 496,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3866,
                        "src": "5773:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5773:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "5760:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 504,
                  "nodeType": "IfStatement",
                  "src": "5756:124:0",
                  "trueBody": {
                    "id": 503,
                    "nodeType": "Block",
                    "src": "5785:95:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d61726b496e76616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279207468652076616c696461746f72",
                              "id": 500,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5806:62:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d66c35aa22b15684f3421d87f8f6f46c6a33006f09ac1e9a35e658512a772d85",
                                "typeString": "literal_string \"markInvalidated function can only be called by the validator\""
                              },
                              "value": "markInvalidated function can only be called by the validator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_d66c35aa22b15684f3421d87f8f6f46c6a33006f09ac1e9a35e658512a772d85",
                                "typeString": "literal_string \"markInvalidated function can only be called by the validator\""
                              }
                            ],
                            "id": 499,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "5799:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5799:70:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 502,
                        "nodeType": "ExpressionStatement",
                        "src": "5799:70:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 505,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "5894:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 506,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "5903:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PendingValidation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5903:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "5894:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_StateType_$12",
                        "typeString": "enum GreenContract.StateType"
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 509,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "5934:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 510,
                          "name": "StateType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "5943:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                            "typeString": "type(enum GreenContract.StateType)"
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "PendingProofValidation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5943:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_StateType_$12",
                          "typeString": "enum GreenContract.StateType"
                        }
                      },
                      "src": "5934:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5894:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 524,
                    "nodeType": "Block",
                    "src": "6037:99:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "6d61726b496e76616c6964617465642066756e6374696f6e2063616e206f6e6c792062652063616c6c65642069662070656e64696e6756616c69646174696f6e",
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6058:66:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7025a08eeb2e3338d39620091b0cc40be386f2b329e903c250a2d3ae1e91815a",
                                "typeString": "literal_string \"markInvalidated function can only be called if pendingValidation\""
                              },
                              "value": "markInvalidated function can only be called if pendingValidation"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_7025a08eeb2e3338d39620091b0cc40be386f2b329e903c250a2d3ae1e91815a",
                                "typeString": "literal_string \"markInvalidated function can only be called if pendingValidation\""
                              }
                            ],
                            "id": 520,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              3871,
                              3872
                            ],
                            "referencedDeclaration": 3872,
                            "src": "6051:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6051:74:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 523,
                        "nodeType": "ExpressionStatement",
                        "src": "6051:74:0"
                      }
                    ]
                  },
                  "id": 525,
                  "nodeType": "IfStatement",
                  "src": "5890:246:0",
                  "trueBody": {
                    "id": 519,
                    "nodeType": "Block",
                    "src": "5977:54:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 514,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "5991:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 515,
                              "name": "StateType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "5999:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_StateType_$12_$",
                                "typeString": "type(enum GreenContract.StateType)"
                              }
                            },
                            "id": 516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Invalidated",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5999:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_StateType_$12",
                              "typeString": "enum GreenContract.StateType"
                            }
                          },
                          "src": "5991:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_StateType_$12",
                            "typeString": "enum GreenContract.StateType"
                          }
                        },
                        "id": 518,
                        "nodeType": "ExpressionStatement",
                        "src": "5991:29:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 527,
                        "name": "appName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "6167:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 528,
                        "name": "workflowName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "6176:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d61726b496e76616c696461746564",
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6190:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4672daf853c0873ca7703b9f2a3b0f09f3b119b814ea019f9854135e38e99c71",
                          "typeString": "literal_string \"markInvalidated\""
                        },
                        "value": "markInvalidated"
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 530,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3866,
                          "src": "6209:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6209:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4672daf853c0873ca7703b9f2a3b0f09f3b119b814ea019f9854135e38e99c71",
                          "typeString": "literal_string \"markInvalidated\""
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 526,
                      "name": "ContractUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "6151:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory,address)"
                      }
                    },
                    "id": 532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6151:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 533,
                  "nodeType": "EmitStatement",
                  "src": "6146:74:0"
                }
              ]
            },
            "documentation": null,
            "id": 535,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "markInvalidated",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5734:2:0"
            },
            "returnParameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5746:0:0"
            },
            "scope": 536,
            "src": "5710:517:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 537,
        "src": "26:6203:0"
      }
    ],
    "src": "0:6229:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xc4e35ee48689d4f7c3d8ea58efd54155f1ea84ffee48edb29b2cdf3c95320ea8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "applicationName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "workflowName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "originatingAddress",
              "type": "address"
            }
          ],
          "name": "ContractCreated",
          "type": "event"
        },
        "0xbc3f77ce3a281e615c85054a5814e59703e2ee0cf33782f46911e0888d4c394c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "applicationName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "workflowName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "action",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "originatingAddress",
              "type": "address"
            }
          ],
          "name": "ContractUpdated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xD21f739B4b7A457447a634913218aBe329278150",
      "transactionHash": "0x4c7e91a4c37d47e372b0ad0e540b70cff8fff7b5266c5da7f542bbcc7610a17e"
    }
  },
  "schemaVersion": "3.3.0",
  "updatedAt": "2020-10-28T15:46:53.736Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}